{"ast":null,"code":"import { API_USER } from '../common/contants';\nimport md5 from '../common/md5';\nexport default {\n  name: \"userlist\",\n  data() {\n    return {\n      users: []\n    };\n  },\n  created() {\n    this.getAllUser();\n  },\n  methods: {\n    getAllUser() {\n      this.$request.get(API_USER).then(result => {\n        this.users = result.data;\n        this.users.password = md5(result.data.password);\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    onDelete(Userid) {\n      this.$swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.$request.delete(API_USER + `/${Userid}`).then(result => {\n            if (result.data.success) {\n              this.getAllUser();\n              this.$swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n            }\n          }).catch(err => {\n            alert(err);\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["API_USER","md5","name","data","users","created","getAllUser","methods","$request","get","then","result","password","catch","err","alert","onDelete","Userid","$swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","delete","success"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/src/views/admin/users/Listuser.vue"],"sourcesContent":["<template>\n    <div class=\"product-list\">\n        <div class=\"princing-header px-3 py-3 pt-md-3 pb-md-4 mx-auto text-center\">\n            <h2 class=\"display-4\">User Management</h2>\n        </div>\n        <div class=\"container\">\n            <div class=\"product-items mb-3 text-center\">\n                <table class=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Stt</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Password</th>\n                            <th scope=\"col\">Role</th>\n                            <th scope=\"col\">Action</th>\n                        </tr>\n                    </thead>\n                    <tbody :key=\"index\" v-for=\"(user, index) in users\">\n                        <tr> \n                            <td scope=\"col\"> {{ index }}</td>\n                            <td>{{ user.email }}</td>\n                            <td>{{ user.name }}</td>\n                            <td>{{ md5(user.password) }}</td>\n                            <td>{{ user.role }}</td>\n                            <td>\n                                <button class=\"btn btn-danger mx-1\" @click=\"onDelete(user.id)\">Delete</button>\n                                <router-link :to=\"{ name: 'user.update-user', params: { id: user.id } }\">\n                                    <button class=\"btn btn-success mx-1\">Edit</button>\n                                </router-link>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <button class=\"btn btn-primary create-new float-right \">\n                <router-link to=\"/admin/users/create-new\" class=\"text-white\"> Create New</router-link> \n            </button>\n        </div>\n        \n        \n    </div>\n   \n</template>\n\n\n<script>\nimport { API_USER } from '../common/contants'\nimport md5 from '../common/md5'\nexport default {\n    name: \"userlist\",\n    data() {\n        return {\n            users:[]\n        }\n    },\n    created() {\n        this.getAllUser()\n    },\n    methods: {\n        getAllUser() {\n            this.$request.get(API_USER).then((result) => {\n                this.users = result.data\n                this.users.password = md5(result.data.password)\n            }).catch((err) => {\n                alert(err)\n            });\n        },\n        onDelete(Userid) {\n            this.$swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, delete it!'\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    this.$request.delete(API_USER + `/${Userid}`).then((result) => {\n                        if (result.data.success) {\n                            this.getAllUser()\n                            this.$swal.fire(\n                                'Deleted!',\n                                'Your file has been deleted.',\n                                'success'\n                            )\n                        }\n                    }).catch((err) => {\n                        alert(err)\n                    });\n                }\n            })\n        }\n    }\n}\n</script>"],"mappings":"AA+CA,SAASA,QAAO,QAAS,oBAAmB;AAC5C,OAAOC,GAAE,MAAO,eAAc;AAC9B,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAC;IACV;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,UAAU,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACLD,UAAUA,CAAA,EAAG;MACT,IAAI,CAACE,QAAQ,CAACC,GAAG,CAACT,QAAQ,CAAC,CAACU,IAAI,CAAEC,MAAM,IAAK;QACzC,IAAI,CAACP,KAAI,GAAIO,MAAM,CAACR,IAAG;QACvB,IAAI,CAACC,KAAK,CAACQ,QAAO,GAAIX,GAAG,CAACU,MAAM,CAACR,IAAI,CAACS,QAAQ;MAClD,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;QACdC,KAAK,CAACD,GAAG;MACb,CAAC,CAAC;IACN,CAAC;IACDE,QAAQA,CAACC,MAAM,EAAE;MACb,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC;QACZC,KAAK,EAAE,eAAe;QACtBC,IAAI,EAAE,mCAAmC;QACzCC,IAAI,EAAE,SAAS;QACfC,gBAAgB,EAAE,IAAI;QACtBC,kBAAkB,EAAE,SAAS;QAC7BC,iBAAiB,EAAE,MAAM;QACzBC,iBAAiB,EAAE;MACvB,CAAC,CAAC,CAAChB,IAAI,CAAEC,MAAM,IAAK;QAChB,IAAIA,MAAM,CAACgB,WAAW,EAAE;UACpB,IAAI,CAACnB,QAAQ,CAACoB,MAAM,CAAC5B,QAAO,GAAK,IAAGiB,MAAO,EAAC,CAAC,CAACP,IAAI,CAAEC,MAAM,IAAK;YAC3D,IAAIA,MAAM,CAACR,IAAI,CAAC0B,OAAO,EAAE;cACrB,IAAI,CAACvB,UAAU,CAAC;cAChB,IAAI,CAACY,KAAK,CAACC,IAAI,CACX,UAAU,EACV,6BAA6B,EAC7B,SACJ;YACJ;UACJ,CAAC,CAAC,CAACN,KAAK,CAAEC,GAAG,IAAK;YACdC,KAAK,CAACD,GAAG;UACb,CAAC,CAAC;QACN;MACJ,CAAC;IACL;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}