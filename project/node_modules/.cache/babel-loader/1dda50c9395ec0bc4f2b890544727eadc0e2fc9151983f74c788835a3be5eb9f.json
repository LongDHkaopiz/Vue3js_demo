{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API_USER } from \"./contants\";\nexport const planetChartData = {\n  type: \"line\",\n  chartData: {\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    datasets: [{\n      label: \"Expected\",\n      data: [90, 120, 161, 134, 105, 160, 165],\n      backgroundColor: \"rgba(54,73,93,.5)\",\n      borderColor: \"#36495d\",\n      borderWidth: 2\n    }, {\n      label: \"Actual\",\n      data: [118, 82, 91, 154, 162, 140, 145],\n      backgroundColor: \"rgba(71, 183,132,.5)\",\n      borderColor: \"#47b784\",\n      borderWidth: 2\n    }]\n  },\n  options: {\n    responsive: true,\n    lineTension: 1,\n    maintainAspectRatio: true,\n    animations: {\n      tension: {\n        duration: 1000,\n        easing: 'linear',\n        from: 1,\n        to: 0,\n        loop: true\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Day'\n        },\n        ticks: {\n          beginAtZero: true,\n          padding: 0\n        },\n        Width: 600\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Values'\n        },\n        min: 0,\n        max: 200,\n        ticks: {\n          stepSize: 10,\n          padding: 0\n        }\n      }\n    }\n  }\n};\nexport default planetChartData;\nvar admin = [];\nvar user = [];\nasync function getuser() {\n  var url = API_USER;\n  // Storing response\n  const response = await fetch(url);\n  // Storing data in form of JSON\n  var data = await response.json();\n  data.forEach(element => {\n    if (element.role === 'user') {\n      user.push(element);\n    } else {\n      admin.push(element);\n    }\n  });\n}\nexport const chartUser = {\n  type: \"bar\",\n  chartData: {\n    labels: ['Admin', 'User'],\n    datasets: [{\n      label: \"Expected\",\n      data: [this.admin.lenght],\n      backgroundColor: \"rgba(54,73,93,.5)\",\n      borderColor: \"#36495d\",\n      borderWidth: 2\n    }, {\n      label: \"Actual\",\n      data: [118, 82, 91, 154, 162, 140, 145],\n      backgroundColor: \"rgba(71, 183,132,.5)\",\n      borderColor: \"#47b784\",\n      borderWidth: 2\n    }]\n  },\n  options: {\n    responsive: true,\n    lineTension: 1,\n    maintainAspectRatio: true,\n    animations: {\n      tension: {\n        duration: 1000,\n        easing: 'linear',\n        from: 1,\n        to: 0,\n        loop: true\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Day'\n        },\n        ticks: {\n          beginAtZero: true,\n          padding: 0\n        },\n        Width: 600\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Values'\n        },\n        min: 0,\n        max: 200,\n        ticks: {\n          stepSize: 10,\n          padding: 0\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["API_USER","planetChartData","type","chartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","options","responsive","lineTension","maintainAspectRatio","animations","tension","duration","easing","from","to","loop","scales","x","title","display","text","ticks","beginAtZero","padding","Width","y","min","max","stepSize","admin","user","getuser","url","response","fetch","json","forEach","element","role","push","chartUser","lenght"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/src/views/admin/common/chart_dash.js"],"sourcesContent":["\nimport { API_USER } from \"./contants\";\n\nexport const planetChartData = {\n    type: \"line\",\n    chartData: {\n        labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n        datasets: [\n            {\n                label: \"Expected\",\n                data: [90, 120, 161, 134, 105, 160, 165],\n                backgroundColor: \"rgba(54,73,93,.5)\",\n                borderColor: \"#36495d\",\n                borderWidth: 2,\n\n            },\n            {\n                label: \"Actual\",\n                data: [118, 82, 91, 154, 162, 140, 145],\n                backgroundColor: \"rgba(71, 183,132,.5)\",\n                borderColor: \"#47b784\",\n                borderWidth: 2,\n\n            }\n        ]\n    },\n    options: {\n        responsive: true,\n        lineTension: 1,\n        maintainAspectRatio: true,\n        animations: {\n            tension: {\n                duration: 1000,\n                easing: 'linear',\n                from: 1,\n                to: 0,\n                loop: true\n            }\n        },\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: 'Day'\n                },\n                ticks: {\n                    beginAtZero: true,\n                    padding: 0,\n                },\n                Width: 600\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: 'Values'\n                },\n                min: 0,\n                max: 200,\n                ticks: {\n                    stepSize: 10,\n                    padding: 0,\n                },\n\n            }\n        }\n    }\n};\n\nexport default planetChartData;\nvar admin = [];\nvar user = []\nasync function getuser() {\n    var url = API_USER;\n    // Storing response\n    const response = await fetch(url);\n    // Storing data in form of JSON\n    var data = await response.json();\n    data.forEach(element => {\n        if (element.role === 'user') {\n            user.push(element)\n        } else {\n            admin.push(element)\n        }\n    });\n}\n\nexport const chartUser = {\n    type: \"bar\",\n    chartData: {\n        labels: ['Admin','User'],\n        datasets: [\n            {\n                label: \"Expected\",\n                data: [this.admin.lenght],\n                backgroundColor: \"rgba(54,73,93,.5)\",\n                borderColor: \"#36495d\",\n                borderWidth: 2,\n\n            },\n            {\n                label: \"Actual\",\n                data: [118, 82, 91, 154, 162, 140, 145],\n                backgroundColor: \"rgba(71, 183,132,.5)\",\n                borderColor: \"#47b784\",\n                borderWidth: 2,\n\n            }\n        ]\n    },\n    options: {\n        responsive: true,\n        lineTension: 1,\n        maintainAspectRatio: true,\n        animations: {\n            tension: {\n                duration: 1000,\n                easing: 'linear',\n                from: 1,\n                to: 0,\n                loop: true\n            }\n        },\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: 'Day'\n                },\n                ticks: {\n                    beginAtZero: true,\n                    padding: 0,\n                },\n                Width: 600\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: 'Values'\n                },\n                min: 0,\n                max: 200,\n                ticks: {\n                    stepSize: 10,\n                    padding: 0,\n                },\n\n            }\n        }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}