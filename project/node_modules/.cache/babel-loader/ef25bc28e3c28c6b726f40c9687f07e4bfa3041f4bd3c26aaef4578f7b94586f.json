{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API_USER, API_LOGIN } from '../common/contants';\nimport { mapActions } from 'vuex';\nimport { VueRecaptcha } from 'vue-recaptcha-v3';\nexport default {\n  name: \"SignForm\",\n  components: {\n    VueRecaptcha\n  },\n  data() {\n    return {\n      user: {\n        email: \"\",\n        password: \"\"\n      },\n      errors: {\n        email: \"\",\n        password: \"\"\n      },\n      recaptchaSiteKey: '6LexlFgmAAAAAKv1sV8CZ7081YVUFc9iDDZAXflj',\n      recaptchaResponse: null\n    };\n  },\n  methods: {\n    ...mapActions(['login']),\n    checkLogin() {\n      this.$swal.fire({\n        title: 'Good job!',\n        text: \"You login successfully!\",\n        icon: 'success'\n      }).then(result => {\n        if (result.isConfirmed) {\n          // Verify the reCAPTCHA token before submitting the form\n          if (this.recaptchaResponse === null) {\n            console.error('reCAPTCHA v3 token is missing!');\n            return;\n          }\n          this.$request.post(API_LOGIN, this.user).then(res => {\n            if (res.data.success) {\n              if (res.data.user.role == 'admin') {\n                this.$router.push({\n                  name: 'admin.dashboard'\n                });\n              } else {\n                this.$router.push({\n                  name: 'home'\n                });\n              }\n              this.$store.commit('login', this.user.email);\n              return;\n            } else {\n              this.$swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Something went wrong!'\n              });\n            }\n          });\n        }\n      });\n    },\n    vueRecaptchaApiLoaded() {\n      grecaptcha.ready(() => {\n        grecaptcha.execute(recaptchaSiteKey, {\n          action: \"submit\"\n        }).then(token => {\n          this.recaptchaResponse = token;\n        });\n      });\n    },\n    handleRecaptchaVerify(response) {\n      this.recaptchaResponse = response;\n    }\n  },\n  created() {\n    this.handleRecaptchaVerify();\n  }\n};","map":{"version":3,"names":["API_USER","API_LOGIN","mapActions","VueRecaptcha","name","components","data","user","email","password","errors","recaptchaSiteKey","recaptchaResponse","methods","checkLogin","$swal","fire","title","text","icon","then","result","isConfirmed","console","error","$request","post","res","success","role","$router","push","$store","commit","vueRecaptchaApiLoaded","grecaptcha","ready","execute","action","token","handleRecaptchaVerify","response","created"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/src/views/admin/authors/Login.vue"],"sourcesContent":["<template>\n\t<div class=\"container h-100\" >\n\t\t<div class=\"d-flex justify-content-center h-100\">\n\t\t\t<div class=\"user_card\">\n\t\t\t\t<div class=\"d-flex justify-content-center\">\n\t\t\t\t\t<div class=\"brand_logo_container\">\n\t\t\t\t\t\t<img src=\"../../../assets/img/pxfuel.jpg\" class=\"brand_logo\" alt=\"Logo\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"d-flex justify-content-center form_container\">\n\t\t\t\t\t<form @submit.prevent=\"checkLogin()\">\n\t\t\t\t\t\t<div class=\"input-group mb-3\">\n\t\t\t\t\t\t\t<div class=\"input-group-append\">\n\t\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input type=\"email\" name=\"email\" v-model=\"user.email\" class=\"form-control input_user\" placeholder=\"Enter your email\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"input-group mb-2\">\n\t\t\t\t\t\t\t<div class=\"input-group-append\">\n\t\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input type=\"password\" name=\"password\" minlength=\"8\" v-model=\"user.password\" class=\"form-control input_pass\" placeholder=\"Enter your password\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"customControlInline\">\n\t\t\t\t\t\t\t\t<label class=\"custom-control-label\" for=\"customControlInline\">Remember me</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"d-flex justify-content-center mt-3 login_container\">\n\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn login_btn\">Login</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mt-4\">\n\t\t\t\t\t<div class=\"d-flex justify-content-center links\">\n\t\t\t\t\t\tDon't have an account? <router-link to=\"/sign-up\" class=\"ml-2\">Sign Up</router-link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"d-flex justify-content-center links\">\n\t\t\t\t\t\t<router-link to=\"/forgot-password\">Forgot your password?</router-link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"g-recaptcha\" data-sitekey=\"recaptchaSiteKey\" data-callback=\"vueRecaptchaApiLoaded\"></div>\n\t\t\t\t<vue-recaptcha ref=\"recaptcha\" sitekey=\"recaptchaSiteKey\" @verify=\"vueRecaptchaApiLoaded\"></vue-recaptcha>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script>\nimport { API_USER, API_LOGIN } from '../common/contants'\nimport { mapActions } from 'vuex'\nimport { VueRecaptcha } from 'vue-recaptcha-v3'\nexport default {\n\tname: \"SignForm\",\n\tcomponents: { VueRecaptcha },\n    data() {\n        return {\n            user: {\n                email: \"\",\n                password: \"\",\n            },\n            errors: {\n                email: \"\",\n                password: \"\",\n\t\t\t},\n\t\t\trecaptchaSiteKey: '6LexlFgmAAAAAKv1sV8CZ7081YVUFc9iDDZAXflj',\n\t\t\trecaptchaResponse: null,\n        }\n    },\n\tmethods: {\n\t\t...mapActions(['login']),\n        checkLogin() {\n            this.$swal.fire({\n                title: 'Good job!',\n                text: \"You login successfully!\",\n                icon: 'success'\n            }).then((result) => {\n\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t// Verify the reCAPTCHA token before submitting the form\n\t\t\t\t\tif (this.recaptchaResponse === null) {\n\t\t\t\t\t\tconsole.error('reCAPTCHA v3 token is missing!');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n                    this.$request.post(API_LOGIN, this.user).then(\n                        res => {\n\t\t\t\t\t\t\tif (res.data.success) {\n\t\t\t\t\t\t\t\tif (res.data.user.role == 'admin') {\n\t\t\t\t\t\t\t\t\tthis.$router.push({\n\t\t\t\t\t\t\t\t\t\tname: 'admin.dashboard',\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.$router.push({\n\t\t\t\t\t\t\t\t\t\tname: 'home'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.$store.commit('login', this.user.email)\n                                return\n                            } else {\n                                this.$swal.fire({\n                                    icon: 'error',\n                                    title: 'Oops...',\n                                    text: 'Something went wrong!',\n                                })\n                            }\n                        }\n                    )\n                }\n            })\n\t\t},\n\t\tvueRecaptchaApiLoaded() {\n\t\t\tgrecaptcha.ready(() => {\n\t\t\t\tgrecaptcha.execute(recaptchaSiteKey, { action: \"submit\" }).then((token) => {\n\t\t\t\t\tthis.recaptchaResponse = token;\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\thandleRecaptchaVerify(response) {\n\t\t\tthis.recaptchaResponse =response\n\t\t},\n\t},\n\tcreated() {\n\t\tthis.handleRecaptchaVerify()\n\t\t\n\t}\n   \n}\n</script>"],"mappings":";AAkDA,SAASA,QAAQ,EAAEC,SAAQ,QAAS,oBAAmB;AACvD,SAASC,UAAS,QAAS,MAAK;AAChC,SAASC,YAAW,QAAS,kBAAiB;AAC9C,eAAe;EACdC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IAAEF;EAAa,CAAC;EACzBG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACd,CAAC;MACDC,MAAM,EAAE;QACJF,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACvB,CAAC;MACDE,gBAAgB,EAAE,0CAA0C;MAC5DC,iBAAiB,EAAE;IACd;EACJ,CAAC;EACJC,OAAO,EAAE;IACR,GAAGX,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;IAClBY,UAAUA,CAAA,EAAG;MACT,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC;QACZC,KAAK,EAAE,WAAW;QAClBC,IAAI,EAAE,yBAAyB;QAC/BC,IAAI,EAAE;MACV,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;QAC5B,IAAIA,MAAM,CAACC,WAAW,EAAE;UACvB;UACA,IAAI,IAAI,CAACV,iBAAgB,KAAM,IAAI,EAAE;YACpCW,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;YAC/C;UACD;UACe,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACzB,SAAS,EAAE,IAAI,CAACM,IAAI,CAAC,CAACa,IAAI,CACzCO,GAAE,IAAK;YACxB,IAAIA,GAAG,CAACrB,IAAI,CAACsB,OAAO,EAAE;cACrB,IAAID,GAAG,CAACrB,IAAI,CAACC,IAAI,CAACsB,IAAG,IAAK,OAAO,EAAE;gBAClC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;kBACjB3B,IAAI,EAAE;gBACP,CAAC;cACF,OAAO;gBACN,IAAI,CAAC0B,OAAO,CAACC,IAAI,CAAC;kBACjB3B,IAAI,EAAE;gBACP,CAAC;cACF;cACA,IAAI,CAAC4B,MAAM,CAACC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC1B,IAAI,CAACC,KAAK;cACnB;YACJ,OAAO;cACH,IAAI,CAACO,KAAK,CAACC,IAAI,CAAC;gBACZG,IAAI,EAAE,OAAO;gBACbF,KAAK,EAAE,SAAS;gBAChBC,IAAI,EAAE;cACV,CAAC;YACL;UACJ,CACJ;QACJ;MACJ,CAAC;IACX,CAAC;IACDgB,qBAAqBA,CAAA,EAAG;MACvBC,UAAU,CAACC,KAAK,CAAC,MAAM;QACtBD,UAAU,CAACE,OAAO,CAAC1B,gBAAgB,EAAE;UAAE2B,MAAM,EAAE;QAAS,CAAC,CAAC,CAAClB,IAAI,CAAEmB,KAAK,IAAK;UAC1E,IAAI,CAAC3B,iBAAgB,GAAI2B,KAAK;QAC/B,CAAC,CAAC;MACH,CAAC,CAAC;IACH,CAAC;IACDC,qBAAqBA,CAACC,QAAQ,EAAE;MAC/B,IAAI,CAAC7B,iBAAgB,GAAG6B,QAAO;IAChC;EACD,CAAC;EACDC,OAAOA,CAAA,EAAG;IACT,IAAI,CAACF,qBAAqB,CAAC;EAE5B;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}