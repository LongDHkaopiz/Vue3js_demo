{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport helpCalendarClass from '../assets/js/helpCalendar';\nimport { propsAndData } from '../mixins/propsAndData';\nimport TimePicker from '../components/TimePicker.vue';\nimport Arrows from '../components/Arrows.vue';\nimport WeekNumbers from '../components/WeekNumbers.vue';\nimport Day from '../components/Day.vue';\nimport MonthYearPicker from '../components/MonthYearPicker.vue';\nimport PickerInputs from '../components/PickerInputs.vue';\nimport Footer from '../components/Footer.vue';\nimport { hElContains, hUniqueID } from '../utils/helpers';\n// import calendarMethods from '../utils/calendarMethods'\n\nexport default {\n  name: 'FunctionalCalendar',\n  components: {\n    MonthYearPicker,\n    TimePicker,\n    PickerInputs,\n    Arrows,\n    Footer,\n    Day,\n    WeekNumbers\n  },\n  mixins: [propsAndData],\n  computed: {\n    startDMY() {\n      //start only with Day Month and Year\n      if (this.calendar.dateRange.start) {\n        return this.calendar.dateRange.start.split(' ')[0];\n      }\n      return '';\n    },\n    endDMY() {\n      //end only with Day Month and Year\n      if (this.calendar.dateRange.end) {\n        return this.calendar.dateRange.end.split(' ')[0];\n      }\n      return '';\n    },\n    rangeIsSelected() {\n      if (!this.isMultipleDateRange) return !!(this.calendar.dateRange.end && this.calendar.dateRange.start);\n      return this.calendar.multipleDateRange.length > 0;\n    },\n    helpCalendar() {\n      return new helpCalendarClass(this.fConfigs.sundayStart, this.checkHiddenElement('leftAndRightDays'), this.fConfigs.dateFormat, this.fConfigs.dayNames);\n    },\n    singleSelectedDate: {\n      get() {\n        let res = '';\n        if (this.displayTimeInput) {\n          const validFormats = ['HH:MM', 'HH:mm', 'hh:MM', 'hh:mm', 'MM:HH', 'mm:HH', 'MM:hh', 'mm:hh'];\n          let format = this.fConfigs.dateFormat;\n          if (this.dateFormat) {\n            format = this.dateFormat;\n          }\n          if (validFormats.indexOf(format.split(' ')[1]) > 3) {\n            res += ' ' + [this.calendar.selectedHour, this.calendar.selectedMinute].reverse().join(':');\n          } else {\n            res += ' ' + [this.calendar.selectedHour, this.calendar.selectedMinute].join(':');\n          }\n        }\n        return this.calendar.selectedDate ? this.calendar.selectedDate + res : '';\n      },\n      set(newValue) {\n        newValue = this.helpCalendar.mask(newValue);\n        if (this.helpCalendar.getDateFromFormat(newValue).getMonth()) {\n          this.calendar.selectedDate = newValue;\n        }\n      }\n    }\n  },\n  created() {\n    this.setConfigs();\n    this.initCalendar();\n  },\n  mounted() {\n    //show time placeholder\n    if (this.displayTimeInput) {\n      const timeFormat = this.fConfigs.placeholder.split(' ')[1];\n      if (!timeFormat) {\n        this.fConfigs.placeholder += ' hh:mm';\n      }\n    }\n    this.popoverElement = this.$refs.popoverElement;\n    // Event\n    this.popoverElement.addEventListener('focusin', this.onFocusIn);\n    this.popoverElement.addEventListener('focusout', this.onFocusOut);\n    window.addEventListener('click', this.hideMonthYearPicker, {\n      capture: true\n    });\n\n    // Reacts to external selected dates\n    this.$watch('value', function (value) {\n      if (typeof value === 'object' && (value.hasOwnProperty('dateRange') || value.hasOwnProperty('selectedDate'))) {\n        this.calendar = value;\n      } else if (typeof value === 'object' && value.hasOwnProperty('multipleDateRange')) {\n        this.calendar.multipleDateRange = value.multipleDateRange;\n        const lastElement = this.calendar.multipleDateRange[Math.max(0, this.calendar.multipleDateRange.length - 1)];\n        if (lastElement && (lastElement.start && !lastElement.end || !lastElement.start && lastElement.end)) {\n          throw new Error('Invalid Data Range');\n        }\n      }\n    }, {\n      immediate: true,\n      deep: true\n    });\n    this.$watch('showCalendar', function (value) {\n      if (value) this.$emit('opened');else this.$emit('closed');\n    }, {\n      immediate: true,\n      deep: true\n    });\n  },\n  beforeDestroy: function () {\n    window.removeEventListener('focusin', this.onFocusIn);\n    window.removeEventListener('focusout', this.onFocusOut);\n    window.removeEventListener('click', this.hideMonthYearPicker);\n  },\n  watch: {\n    enabledDates: {\n      handler() {\n        this.fConfigs.enabledDates = this.enabledDates;\n      },\n      deep: true\n    },\n    'configs.enabledDates': {\n      handler() {\n        this.fConfigs.enabledDates = this.configs.enabledDates;\n      },\n      deep: true\n    },\n    fConfigs: {\n      handler() {\n        this.markChooseDays();\n      },\n      deep: true,\n      immediate: true\n    },\n    calendar: {\n      handler() {\n        this.markChooseDays();\n      },\n      deep: true,\n      immediate: true\n    },\n    'calendar.currentDate': {\n      handler(value) {\n        this.$emit('input', this.calendar);\n        this.checkLimits(value);\n      }\n    }\n  },\n  methods: {\n    initCalendar() {\n      this.setCalendarData();\n      this.listRendering();\n      this.markChooseDays();\n      this.checkLimits(this.calendar.currentDate);\n    },\n    updateCalendar() {\n      this.setExistingCalendarData();\n      this.listRendering();\n      this.markChooseDays();\n    },\n    isNotSeparatelyAndFirst(key) {\n      return this.isSeparately || key == 0;\n    },\n    setCalendarData() {\n      let date = this.calendar.currentDate;\n      date = new Date(date.getFullYear(), date.getMonth() - 1);\n      this.listCalendars = [];\n      for (let i = 0; i < this.fConfigs.calendarsCount; i++) {\n        date = new Date(date.getFullYear(), date.getMonth() + 1);\n        let calendar = {\n          key: i + hUniqueID(),\n          date: date,\n          dateTop: `${this.fConfigs.monthNames[date.getMonth()]} ${date.getFullYear()}`,\n          month: this.fConfigs.monthNames[date.getMonth()],\n          year: date.getFullYear(),\n          weeks: this.helpCalendar.getFinalizedWeeks(date.getMonth(), date.getFullYear())\n        };\n        this.listCalendars.push(calendar);\n        if (!this.fConfigs.isMultiple) {\n          break;\n        }\n      }\n    },\n    setExistingCalendarData() {\n      for (let i = 0; i < this.listCalendars.length; i++) {\n        let calendar = this.listCalendars[i];\n        let date = calendar.date;\n        this.$set(this.listCalendars, i, {\n          key: calendar.key,\n          date: date,\n          dateTop: `${this.fConfigs.monthNames[date.getMonth()]} ${date.getFullYear()}`,\n          month: this.fConfigs.monthNames[date.getMonth()],\n          year: date.getFullYear(),\n          weeks: this.helpCalendar.getFinalizedWeeks(date.getMonth(), date.getFullYear())\n        });\n        if (!this.fConfigs.isMultiple) {\n          break;\n        }\n      }\n    },\n    setConfigs() {\n      let globalOptions;\n      if (typeof this.$getOptions !== 'undefined') {\n        // Global Options\n        globalOptions = this.$getOptions();\n        Object.keys(globalOptions).forEach(objectKey => {\n          if (typeof this.fConfigs[objectKey] !== 'undefined') {\n            this.$set(this.fConfigs, objectKey, globalOptions[objectKey]);\n          }\n        });\n      }\n      if (typeof this.configs !== 'undefined') {\n        Object.keys(this.fConfigs).forEach(objectKey => {\n          if (typeof this.configs[objectKey] !== 'undefined') {\n            // Get From Configs\n            this.$set(this.fConfigs, objectKey, this.configs[objectKey]);\n          }\n        });\n      } else {\n        Object.keys(this.$props).forEach(objectKey => {\n          if (typeof this.fConfigs[objectKey] !== 'undefined' && typeof this.$props[objectKey] !== 'undefined') {\n            this.$set(this.fConfigs, objectKey, this.$props[objectKey]);\n          }\n        });\n      }\n\n      // Is Modal\n      if (this.fConfigs.isModal) this.showCalendar = false;\n\n      // Placeholder\n      if (!this.fConfigs.placeholder) this.fConfigs.placeholder = this.fConfigs.dateFormat;\n      if (typeof this.newCurrentDate !== 'undefined') {\n        this.calendar.currentDate = this.newCurrentDate;\n      }\n\n      // Sunday Start\n      if (this.fConfigs.sundayStart) {\n        let dayNames = [...this.fConfigs.dayNames];\n        let sundayName = dayNames[dayNames.length - 1];\n        dayNames.splice(dayNames.length - 1, 1);\n        dayNames.unshift(sundayName);\n        this.fConfigs.dayNames = dayNames;\n      }\n    },\n    listRendering() {\n      // Each Calendars\n      this.listCalendars.forEach(calendar => {\n        // Set Calendar Weeks\n        calendar.weeks.forEach(week => {\n          let finalizedDays = [];\n          week.days.forEach(day => {\n            let date = new Date(day.year, day.month, day.day);\n            let now = new Date();\n            let isToday = false;\n            date.setHours(0, 0, 0, 0);\n            now.setHours(0, 0, 0, 0);\n            if (date.getTime() === now.getTime()) {\n              isToday = true;\n            }\n            let checkMarked;\n            // With Custom Classes\n            if (typeof this.fConfigs.markedDates[0] === 'object') {\n              checkMarked = this.fConfigs.markedDates.find(markDate => {\n                return markDate.date === this.helpCalendar.formatDate(date);\n              });\n            } else {\n              // Without Classes\n              checkMarked = this.fConfigs.markedDates.find(markDate => {\n                return markDate === this.helpCalendar.formatDate(date);\n              });\n            }\n            if (this.startDMY === this.helpCalendar.formatDate(date)) {\n              checkMarked = true;\n            }\n            let isMarked = false;\n            if (typeof checkMarked !== 'undefined') {\n              isMarked = true;\n            }\n            finalizedDays.push({\n              day: day.day,\n              date: this.helpCalendar.formatDate(date),\n              hide: day.hide,\n              isMouseToLeft: false,\n              isMouseToRight: false,\n              isHovered: false,\n              isDateRangeStart: this.checkDateRangeStart(this.helpCalendar.formatDate(date)),\n              isDateRangeEnd: this.checkDateRangeEnd(this.helpCalendar.formatDate(date)),\n              hideLeftAndRightDays: day.hideLeftAndRightDays,\n              isToday,\n              isMarked\n            });\n          });\n          week.days = finalizedDays;\n        });\n      });\n    },\n    clickDay(item, isDisabledDate) {\n      if (this.fConfigs.withTimePicker && this.fConfigs.isDateRange) {\n        item.date = item.date + ' 00:00';\n      }\n      this.$emit('dayClicked', item);\n      if (!this.fConfigs.isDateRange && !this.fConfigs.isDatePicker && !this.fConfigs.isMultipleDatePicker) {\n        return false;\n      }\n\n      //Disabled Dates - Start\n\n      // Disable days of week if set in configuration\n      let dateDay = this.helpCalendar.getDateFromFormat(item.date).getDay() - 1;\n      if (dateDay === -1) {\n        dateDay = 6;\n      }\n      let dayOfWeekString = this.fConfigs.dayNames[dateDay];\n      if (this.fConfigs.disabledDayNames.includes(dayOfWeekString) || isDisabledDate(item.date)) {\n        return false;\n      }\n\n      //Disabled Dates - End\n\n      // Limits\n      if (this.fConfigs.limits) {\n        let min = this.helpCalendar.getDateFromFormat(this.fConfigs.limits.min).getTime();\n        let max = this.helpCalendar.getDateFromFormat(this.fConfigs.limits.max).getTime();\n        let date = this.helpCalendar.getDateFromFormat(item.date).getTime();\n        if (date < min || date > max) {\n          return false;\n        }\n      }\n\n      // Date Multiple Range\n      if (this.fConfigs.isMultipleDateRange) {\n        let clickDate = this.helpCalendar.getDateFromFormat(item.date.split(' ')[0]).getTime();\n        let rangesLength = this.calendar.multipleDateRange.length;\n        let lastRange = this.calendar.multipleDateRange[rangesLength - 1];\n        let startDate = '';\n        // if (lastRange) {\n        //   // if (lastRange.start && lastRange.end)\n        // } else\n\n        if (!lastRange) {\n          this.calendar.multipleDateRange.push({\n            end: '',\n            start: ''\n          });\n          rangesLength = this.calendar.multipleDateRange.length;\n          lastRange = this.calendar.multipleDateRange[rangesLength - 1];\n        }\n        if (lastRange.start) {\n          startDate = this.helpCalendar.getDateFromFormat(lastRange.start);\n        }\n\n        // Two dates is not empty\n        if (lastRange.start !== '' && lastRange.end !== '') {\n          this.calendar.multipleDateRange.push({\n            end: '',\n            start: item.date\n          });\n          // lastRange.start = item.date\n          // lastRange.end = ''\n          // Not date selected\n        } else if (lastRange.start === '' && lastRange.end === '') {\n          lastRange.start = item.date;\n          // Start Date not empty, chose date > start date\n        } else if (lastRange.end === '' && clickDate > startDate.getTime()) {\n          lastRange.end = item.date;\n          // Start date not empty, chose date <= start date (also same date range select)\n        } else if (lastRange.start !== '' && clickDate <= startDate.getTime()) {\n          this.$nextTick(() => {\n            if (this.calendar.withTimePicker) {\n              this.$refs['timePicker'].startDateActive = true;\n            }\n          });\n          lastRange.end = lastRange.start;\n          lastRange.start = item.date;\n        }\n\n        //Get number of days between date range dates\n        if (lastRange.start !== '' && lastRange.end !== '') {\n          let oneDay = 24 * 60 * 60 * 1000;\n          let firstDate = this.helpCalendar.getDateFromFormat(lastRange.start);\n          let secondDate = this.helpCalendar.getDateFromFormat(lastRange.end);\n          let diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / oneDay));\n          let itemTime = this.helpCalendar.getDateFromFormat(item.date).getTime();\n          this.$emit('selectedDaysCount', diffDays);\n\n          // Is Auto Closeable\n          if (this.fConfigs.isModal && this.fConfigs.isAutoCloseable) {\n            this.showCalendar = false;\n          }\n\n          // Minimum Selected Days\n          let minSelDays = this.fConfigs.minSelDays;\n          if (minSelDays && itemTime >= startDate.getTime() && diffDays < minSelDays) {\n            startDate.setDate(startDate.getDate() + (minSelDays - 1));\n            lastRange.end = this.helpCalendar.formatDate(startDate);\n          }\n          if (minSelDays && itemTime < startDate.getTime() && diffDays < minSelDays) {\n            startDate.setDate(startDate.getDate() - (minSelDays - 1));\n            lastRange.start = this.helpCalendar.formatDate(startDate);\n          }\n\n          // Maximum Selected Days\n          let maxSelDays = this.fConfigs.maxSelDays;\n          if (maxSelDays && itemTime >= startDate.getTime() && diffDays >= maxSelDays) {\n            startDate.setDate(startDate.getDate() + (maxSelDays - 1));\n            lastRange.end = this.helpCalendar.formatDate(startDate);\n          }\n          if (maxSelDays && itemTime < startDate.getTime() && diffDays >= maxSelDays) {\n            startDate.setDate(startDate.getDate() - (maxSelDays - 1));\n            lastRange.start = this.helpCalendar.formatDate(startDate);\n          }\n        }\n        this.$emit('input', this.calendar);\n      } // Date Range\n      else if (this.fConfigs.isDateRange) {\n        let clickDate = this.helpCalendar.getDateFromFormat(item.date.split(' ')[0]).getTime();\n        let startDate = '';\n        if (this.calendar.dateRange.start) {\n          startDate = this.helpCalendar.getDateFromFormat(this.calendar.dateRange.start);\n        }\n\n        // Two dates is not empty\n        if (this.calendar.dateRange.start !== '' && this.calendar.dateRange.end !== '') {\n          this.calendar.dateRange.start = item.date;\n          this.calendar.dateRange.end = '';\n          // Not date selected\n        } else if (this.calendar.dateRange.start === '' && this.calendar.dateRange.end === '') {\n          this.calendar.dateRange.start = item.date;\n          // Start Date not empty, chose date > start date\n        } else if (this.calendar.dateRange.end === '' && clickDate > startDate.getTime()) {\n          this.calendar.dateRange.end = item.date;\n          // Start date not empty, chose date <= start date (also same date range select)\n        } else if (this.calendar.dateRange.start !== '' && clickDate <= startDate.getTime()) {\n          this.$nextTick(() => {\n            if (this.calendar.dateRange && this.calendar.withTimePicker) {\n              this.$refs['timePicker'].startDateActive = true;\n            }\n          });\n          this.calendar.dateRange.end = this.calendar.dateRange.start;\n          this.calendar.dateRange.start = item.date;\n        }\n\n        //Get number of days between date range dates\n        if (this.calendar.dateRange.start !== '' && this.calendar.dateRange.end !== '') {\n          let oneDay = 24 * 60 * 60 * 1000;\n          let firstDate = this.helpCalendar.getDateFromFormat(this.calendar.dateRange.start);\n          let secondDate = this.helpCalendar.getDateFromFormat(this.calendar.dateRange.end);\n          let diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / oneDay));\n          let itemTime = this.helpCalendar.getDateFromFormat(item.date).getTime();\n          this.$emit('selectedDaysCount', diffDays);\n\n          // Is Auto Closeable\n          if (this.fConfigs.isModal && this.fConfigs.isAutoCloseable) {\n            this.showCalendar = false;\n          }\n\n          // Minimum Selected Days\n          let minSelDays = this.fConfigs.minSelDays;\n          if (minSelDays && itemTime >= startDate.getTime() && diffDays < minSelDays) {\n            startDate.setDate(startDate.getDate() + (minSelDays - 1));\n            this.calendar.dateRange.end = this.helpCalendar.formatDate(startDate);\n          }\n          if (minSelDays && itemTime < startDate.getTime() && diffDays < minSelDays) {\n            startDate.setDate(startDate.getDate() - (minSelDays - 1));\n            this.calendar.dateRange.start = this.helpCalendar.formatDate(startDate);\n          }\n\n          // Maximum Selected Days\n          let maxSelDays = this.fConfigs.maxSelDays;\n          if (maxSelDays && itemTime >= startDate.getTime() && diffDays >= maxSelDays) {\n            startDate.setDate(startDate.getDate() + (maxSelDays - 1));\n            this.calendar.dateRange.end = this.helpCalendar.formatDate(startDate);\n          }\n          if (maxSelDays && itemTime < startDate.getTime() && diffDays >= maxSelDays) {\n            startDate.setDate(startDate.getDate() - (maxSelDays - 1));\n            this.calendar.dateRange.start = this.helpCalendar.formatDate(startDate);\n          }\n        }\n        this.$emit('input', this.calendar);\n      } else if (this.fConfigs.isDatePicker) {\n        this.calendar.selectedDate = item.date;\n        this.$emit('input', this.calendar);\n\n        // Is Auto Closeable\n        if (this.fConfigs.isModal && this.fConfigs.isAutoCloseable) {\n          this.showCalendar = false;\n        }\n      } else if (this.fConfigs.isMultipleDatePicker) {\n        if (this.calendar.hasOwnProperty('selectedDates') && this.calendar.selectedDates.find(date => date.date === item.date)) {\n          let dateIndex = this.calendar.selectedDates.findIndex(date => date.date === item.date);\n          this.calendar.selectedDates.splice(dateIndex, 1);\n        } else {\n          let date = Object.assign({}, this.defaultDateFormat);\n          date.date = item.date;\n          if (!this.calendar.hasOwnProperty('selectedDates')) {\n            this.calendar.selectedDates = [];\n          }\n          this.calendar.selectedDates.push(date);\n        }\n        this.$emit('input', this.calendar);\n      }\n      this.markChooseDays();\n\n      // Time Picker\n      if (this.fConfigs.withTimePicker) {\n        if (this.fConfigs.isDateRange || this.fConfigs.isDatePicker) {\n          this.openTimePicker();\n        }\n        if (this.calendar.selectedDates.find(date => date.date === item.date) && this.fConfigs.isMultipleDatePicker) {\n          this.openTimePicker();\n        }\n      }\n      this.$emit('choseDay', item);\n    },\n    markChooseDays() {\n      let startDate = this.startDMY;\n      let endDate = this.endDMY;\n      this.listCalendars.forEach(calendar => {\n        calendar.weeks.forEach(week => {\n          week.days.forEach(day => {\n            day.isMarked = false;\n            day.date = day.date.split(' ')[0];\n            // Date Picker\n            if (this.fConfigs.isDatePicker) {\n              if (this.calendar.selectedDate === day.date) day.isMarked = true;\n            } else if (this.fConfigs.isMultipleDatePicker) {\n              if (this.calendar.hasOwnProperty('selectedDates') && this.calendar.selectedDates.find(date => date.date === day.date)) day.isMarked = true;\n            } else {\n              day.isMouseToLeft = false;\n              day.isMouseToRight = false;\n              // Date Range\n              if (startDate === day.date) {\n                day.isMouseToLeft = !!endDate;\n                day.isMarked = true;\n              }\n              if (endDate === day.date) {\n                day.isMouseToRight = !!endDate;\n                day.isMarked = true;\n              }\n              //Multiple Range\n              if (this.calendar.multipleDateRange) {\n                if (~this.calendar.multipleDateRange.map(range => range.start.split(' ')[0]).indexOf(day.date)) {\n                  day.isMouseToLeft = !!endDate;\n                  day.isMarked = true;\n                }\n                if (~this.calendar.multipleDateRange.map(range => range.end.split(' ')[0]).indexOf(day.date)) {\n                  day.isMouseToRight = !!endDate;\n                  day.isMarked = true;\n                }\n                this.calendar.multipleDateRange.forEach(range => {\n                  if (range.start && range.start === range.end) {\n                    day.isMouseToLeft = false;\n                    day.isMouseToRight = false;\n                  }\n                  if (range.start && range.end) {\n                    if (this.helpCalendar.getDateFromFormat(day.date).getTime() > this.helpCalendar.getDateFromFormat(range.start) && this.helpCalendar.getDateFromFormat(day.date) < this.helpCalendar.getDateFromFormat(range.end)) {\n                      day.isMarked = true;\n                    }\n                  }\n                });\n              }\n              if (startDate && startDate === endDate) {\n                day.isMouseToLeft = false;\n                day.isMouseToRight = false;\n              }\n              if (startDate && endDate) {\n                if (this.helpCalendar.getDateFromFormat(day.date).getTime() > this.helpCalendar.getDateFromFormat(startDate) && this.helpCalendar.getDateFromFormat(day.date) < this.helpCalendar.getDateFromFormat(endDate)) {\n                  day.isMarked = true;\n                }\n              }\n            }\n            if (this.fConfigs.markedDates.includes(day.date)) day.isMarked = true;\n          });\n        });\n      });\n    },\n    dayMouseOver(date) {\n      this.$emit('dayMouseOver', date);\n      if (!this.fConfigs.isDateRange) {\n        return false;\n      }\n\n      // Limits\n      if (this.fConfigs.limits) {\n        let limitMin = this.helpCalendar.getDateFromFormat(this.fConfigs.limits.min).getTime();\n        let limitMax = this.helpCalendar.getDateFromFormat(this.fConfigs.limits.max).getTime();\n        let limitDate = this.helpCalendar.getDateFromFormat(date).getTime();\n        if (limitDate < limitMin || limitDate > limitMax) {\n          return false;\n        }\n      }\n\n      //Multiple Range\n\n      if ((this.calendar.dateRange.start === '' || this.calendar.dateRange.end === '') && (this.calendar.dateRange.start !== '' || this.calendar.dateRange.end !== '')) {\n        for (let e = 0; e < this.listCalendars.length; e++) {\n          let calendar = this.listCalendars[e];\n          for (let f = 0; f < calendar.weeks.length; f++) {\n            let week = calendar.weeks[f];\n            for (let i = 0; i < week.days.length; i++) {\n              let item = week.days[i];\n              this.listCalendars[e].weeks[f].days[i].isHovered = false;\n              if (item.date !== this.startDMY && !this.fConfigs.markedDates.includes(item.date)) {\n                this.listCalendars[e].weeks[f].days[i].isMarked = false;\n              }\n              if (this.calendar.dateRange.start) {\n                let itemDate = this.helpCalendar.getDateFromFormat(item.date).getTime();\n                let thisDate = this.helpCalendar.getDateFromFormat(date).getTime();\n                let startDate = this.helpCalendar.getDateFromFormat(this.calendar.dateRange.start);\n                this.listCalendars[e].weeks[f].days[i].isMouseToLeft = itemDate === startDate.getTime() && thisDate > startDate.getTime() || itemDate === thisDate && thisDate < startDate.getTime();\n                this.listCalendars[e].weeks[f].days[i].isMouseToRight = itemDate === startDate.getTime() && thisDate < startDate.getTime() || itemDate === thisDate && thisDate > startDate.getTime();\n                let dateDay = this.helpCalendar.getDateFromFormat(item.date).getDay() - 1;\n                if (dateDay === -1) {\n                  dateDay = 6;\n                }\n                let dayOfWeekString = this.fConfigs.dayNames[dateDay];\n                if (!this.fConfigs.disabledDayNames.includes(dayOfWeekString) && (itemDate > startDate.getTime() && itemDate < thisDate || itemDate < startDate.getTime() && itemDate > thisDate)) {\n                  this.listCalendars[e].weeks[f].days[i].isMarked = true;\n                }\n                if (!this.calendar.dateRange.end && itemDate === thisDate) {\n                  this.listCalendars[e].weeks[f].days[i].isHovered = false;\n                }\n                if (this.checkSelDates('min', this.calendar.dateRange.start, item.date, date)) {\n                  this.listCalendars[e].weeks[f].days[i].isMarked = true;\n                  let minDateToRight, minDateToLeft;\n                  minDateToLeft = new Date(startDate.getTime());\n                  minDateToRight = new Date(startDate.getTime());\n                  minDateToLeft.setDate(minDateToLeft.getDate() - this.fConfigs.minSelDays + 1);\n                  minDateToRight.setDate(minDateToRight.getDate() + this.fConfigs.minSelDays - 1);\n                  if (thisDate >= minDateToLeft.getTime() && this.helpCalendar.formatDate(minDateToLeft) === item.date) {\n                    this.listCalendars[e].weeks[f].days[i].isMarked = false;\n                    this.listCalendars[e].weeks[f].days[i].isMouseToLeft = true;\n                    this.listCalendars[e].weeks[f].days[i].isHovered = true;\n                  } else if (thisDate <= minDateToRight.getTime() && this.helpCalendar.formatDate(minDateToRight) === item.date) {\n                    this.listCalendars[e].weeks[f].days[i].isMarked = false;\n                    this.listCalendars[e].weeks[f].days[i].isMouseToRight = true;\n                    this.listCalendars[e].weeks[f].days[i].isHovered = true;\n                  }\n                }\n                if (this.checkSelDates('max', this.calendar.dateRange.start, item.date, date)) {\n                  this.listCalendars[e].weeks[f].days[i].isMarked = false;\n                  this.listCalendars[e].weeks[f].days[i].isHovered = false;\n                  this.listCalendars[e].weeks[f].days[i].isMouseToLeft = false;\n                  this.listCalendars[e].weeks[f].days[i].isMouseToRight = false;\n                  let maxDateToLeft, maxDateToRight;\n                  maxDateToLeft = new Date(startDate.getTime());\n                  maxDateToRight = new Date(startDate.getTime());\n                  maxDateToLeft.setDate(maxDateToLeft.getDate() - this.fConfigs.maxSelDays + 1);\n                  maxDateToRight.setDate(maxDateToRight.getDate() + this.fConfigs.maxSelDays - 1);\n                  if (thisDate <= maxDateToLeft.getTime()) {\n                    if (this.helpCalendar.formatDate(maxDateToLeft) === item.date) {\n                      this.listCalendars[e].weeks[f].days[i].isHovered = true;\n                      this.listCalendars[e].weeks[f].days[i].isMouseToLeft = true;\n                    }\n                  }\n                  if (thisDate >= maxDateToRight.getTime()) {\n                    if (this.helpCalendar.formatDate(maxDateToRight) === item.date) {\n                      this.listCalendars[e].weeks[f].days[i].isHovered = true;\n                      this.listCalendars[e].weeks[f].days[i].isMouseToRight = true;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (this.calendar.multipleDateRange) {\n        let range = this.calendar.multipleDateRange[this.calendar.multipleDateRange.length - 1];\n        if (!range) return;\n        // this.calendar.multipleDateRange.forEach((range, index) => {\n        if ((range.start === '' || range.end === '') && (range.start !== '' || range.end !== '')) {\n          for (let e = 0; e < this.listCalendars.length; e++) {\n            let calendar = this.listCalendars[e];\n            for (let f = 0; f < calendar.weeks.length; f++) {\n              let week = calendar.weeks[f];\n              for (let i = 0; i < week.days.length; i++) {\n                let item = week.days[i];\n                this.listCalendars[e].weeks[f].days[i].isHovered = false;\n                if (item.date !== this.startDMY && !this.fConfigs.markedDates.includes(item.date)) {\n                  this.listCalendars[e].weeks[f].days[i].isMarked = false;\n                }\n                if (range.start) {\n                  let itemDate = this.helpCalendar.getDateFromFormat(item.date).getTime();\n                  let thisDate = this.helpCalendar.getDateFromFormat(date).getTime();\n                  let startDate = this.helpCalendar.getDateFromFormat(range.start);\n                  this.listCalendars[e].weeks[f].days[i].isMouseToLeft = itemDate === startDate.getTime() && thisDate > startDate.getTime() || itemDate === thisDate && thisDate < startDate.getTime();\n                  this.listCalendars[e].weeks[f].days[i].isMouseToRight = itemDate === startDate.getTime() && thisDate < startDate.getTime() || itemDate === thisDate && thisDate > startDate.getTime();\n                  let dateDay = this.helpCalendar.getDateFromFormat(item.date).getDay() - 1;\n                  if (dateDay === -1) {\n                    dateDay = 6;\n                  }\n                  let dayOfWeekString = this.fConfigs.dayNames[dateDay];\n                  if (!this.fConfigs.disabledDayNames.includes(dayOfWeekString) && (itemDate > startDate.getTime() && itemDate < thisDate || itemDate < startDate.getTime() && itemDate > thisDate)) {\n                    this.listCalendars[e].weeks[f].days[i].isMarked = true;\n                  }\n                  if (!range.end && itemDate === thisDate) {\n                    this.listCalendars[e].weeks[f].days[i].isHovered = false;\n                  }\n                  if (this.checkSelDates('min', range.start, item.date, date)) {\n                    this.listCalendars[e].weeks[f].days[i].isMarked = true;\n                    let minDateToRight, minDateToLeft;\n                    minDateToLeft = new Date(startDate.getTime());\n                    minDateToRight = new Date(startDate.getTime());\n                    minDateToLeft.setDate(minDateToLeft.getDate() - this.fConfigs.minSelDays + 1);\n                    minDateToRight.setDate(minDateToRight.getDate() + this.fConfigs.minSelDays - 1);\n                    if (thisDate >= minDateToLeft.getTime() && this.helpCalendar.formatDate(minDateToLeft) === item.date) {\n                      this.listCalendars[e].weeks[f].days[i].isMarked = false;\n                      this.listCalendars[e].weeks[f].days[i].isMouseToLeft = true;\n                      this.listCalendars[e].weeks[f].days[i].isHovered = true;\n                    } else if (thisDate <= minDateToRight.getTime() && this.helpCalendar.formatDate(minDateToRight) === item.date) {\n                      this.listCalendars[e].weeks[f].days[i].isMarked = false;\n                      this.listCalendars[e].weeks[f].days[i].isMouseToRight = true;\n                      this.listCalendars[e].weeks[f].days[i].isHovered = true;\n                    }\n                  }\n                  if (this.checkSelDates('max', range.start, item.date, date)) {\n                    this.listCalendars[e].weeks[f].days[i].isMarked = false;\n                    this.listCalendars[e].weeks[f].days[i].isHovered = false;\n                    this.listCalendars[e].weeks[f].days[i].isMouseToLeft = false;\n                    this.listCalendars[e].weeks[f].days[i].isMouseToRight = false;\n                    let maxDateToLeft, maxDateToRight;\n                    maxDateToLeft = new Date(startDate.getTime());\n                    maxDateToRight = new Date(startDate.getTime());\n                    maxDateToLeft.setDate(maxDateToLeft.getDate() - this.fConfigs.maxSelDays + 1);\n                    maxDateToRight.setDate(maxDateToRight.getDate() + this.fConfigs.maxSelDays - 1);\n                    if (thisDate <= maxDateToLeft.getTime()) {\n                      if (this.helpCalendar.formatDate(maxDateToLeft) === item.date) {\n                        this.listCalendars[e].weeks[f].days[i].isHovered = true;\n                        this.listCalendars[e].weeks[f].days[i].isMouseToLeft = true;\n                      }\n                    }\n                    if (thisDate >= maxDateToRight.getTime()) {\n                      if (this.helpCalendar.formatDate(maxDateToRight) === item.date) {\n                        this.listCalendars[e].weeks[f].days[i].isHovered = true;\n                        this.listCalendars[e].weeks[f].days[i].isMouseToRight = true;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        // })\n      }\n    },\n\n    /**\n     * @return {boolean}\n     */\n    PreMonth(calendarKey = null) {\n      if (!this.allowPreDate) return false;\n      this.transitionPrefix = 'right';\n      let step = this.fConfigs.changeMonthStep;\n      calendarKey = calendarKey !== null ? calendarKey : 0;\n      let currentCalendar = this.listCalendars[calendarKey];\n      currentCalendar.date = new Date(currentCalendar.date.getFullYear(), currentCalendar.date.getMonth() - step);\n      currentCalendar.key -= hUniqueID();\n      this.updateCalendar();\n      if (!this.fConfigs.isSeparately) {\n        this.calendar.currentDate = currentCalendar.date;\n        this.initCalendar();\n      }\n      this.$emit('changedMonth', currentCalendar.date);\n    },\n    /**\n     * @return {boolean}\n     */\n    NextMonth(calendarKey = null) {\n      if (!this.allowNextDate) return false;\n      this.transitionPrefix = 'left';\n      let step = this.fConfigs.changeMonthStep;\n      calendarKey = calendarKey !== null ? calendarKey : 0;\n      let currentCalendar = this.listCalendars[calendarKey];\n      currentCalendar.date = new Date(currentCalendar.date.getFullYear(), currentCalendar.date.getMonth() + step);\n      currentCalendar.key += hUniqueID();\n      this.updateCalendar();\n      if (!this.fConfigs.isSeparately) {\n        this.calendar.currentDate = currentCalendar.date;\n        this.initCalendar();\n      }\n      this.$emit('changedMonth', currentCalendar.date);\n    },\n    /**\n     * @return {boolean}\n     */\n    PreYear(calendarKey = null) {\n      if (!this.allowPreDate) return false;\n      let step = this.showYearPicker ? this.fConfigs.changeYearStep : 1;\n      calendarKey = calendarKey !== null ? calendarKey : 0;\n      let currentCalendar = this.listCalendars[calendarKey];\n      currentCalendar.date = new Date(currentCalendar.date.getFullYear() - step, currentCalendar.date.getMonth());\n      this.updateCalendar();\n      if (!this.fConfigs.isSeparately) {\n        this.calendar.currentDate = currentCalendar.date;\n        this.initCalendar();\n      }\n      this.$emit('changedYear', currentCalendar.date);\n    },\n    /**\n     * @return {boolean}\n     */\n    NextYear(calendarKey = null) {\n      if (!this.allowNextDate) return false;\n      let step = this.showYearPicker ? this.fConfigs.changeYearStep : 1;\n      calendarKey = calendarKey !== null ? calendarKey : 0;\n      let currentCalendar = this.listCalendars[calendarKey];\n      currentCalendar.date = new Date(currentCalendar.date.getFullYear() + step, currentCalendar.date.getMonth());\n      this.updateCalendar();\n      if (!this.fConfigs.isSeparately) {\n        this.calendar.currentDate = currentCalendar.date;\n        this.initCalendar();\n      }\n      this.$emit('changedYear', currentCalendar.date);\n    },\n    ChooseDate(date) {\n      let newDate = this.helpCalendar.getDateFromFormat(date);\n      if (date === 'today') {\n        newDate = new Date();\n      }\n      this.listCalendars[0].date = this.calendar.currentDate = newDate;\n      this.updateCalendar();\n      this.initCalendar();\n    },\n    openMonthPicker(key) {\n      if (this.fConfigs.changeMonthFunction) {\n        this.showMonthPicker = key === this.showMonthPicker ? false : key;\n        this.showYearPicker = false;\n      }\n    },\n    openYearPicker(key) {\n      if (this.fConfigs.changeYearFunction) {\n        this.showYearPicker = key === this.showYearPicker ? false : key;\n        this.showMonthPicker = false;\n      }\n    },\n    openTimePicker() {\n      this.showTimePicker = true;\n    },\n    pickMonth(key, calendarKey) {\n      this.showMonthPicker = false;\n      if (!this.isSeparately) {\n        this.listCalendars.forEach((currentCalendar, index) => {\n          let date = currentCalendar.date;\n          currentCalendar.date = new Date(date.getFullYear(), key + 1 + index, 0);\n          currentCalendar.key += hUniqueID();\n        });\n      } else {\n        let currentCalendar = this.listCalendars[calendarKey];\n        let date = currentCalendar.date;\n        currentCalendar.date = new Date(date.getFullYear(), key + 1, 0);\n        currentCalendar.key += hUniqueID();\n      }\n      let currentCalendar = this.listCalendars[calendarKey];\n      this.$emit('changedMonth', currentCalendar.date);\n      this.updateCalendar();\n    },\n    pickYear(year, calendarKey) {\n      this.showYearPicker = false;\n      if (!this.isSeparately) {\n        this.listCalendars.forEach(currentCalendar => {\n          let date = currentCalendar.date;\n          currentCalendar.date = new Date(year, date.getMonth() + 1, 0);\n          currentCalendar.key += hUniqueID();\n          this.$emit('changedYear', currentCalendar.date);\n        });\n      } else {\n        let currentCalendar = this.listCalendars[calendarKey];\n        let date = currentCalendar.date;\n        currentCalendar.date = new Date(year, date.getMonth() + 1, 0);\n        currentCalendar.key += hUniqueID();\n        this.$emit('changedYear', currentCalendar.date);\n      }\n      this.updateCalendar();\n    },\n    getYearList(date, delta) {\n      let years = [];\n      let year = date.getFullYear() - 4 + delta;\n      for (let i = 0; i < 12; i++) {\n        let finalYear = year + i;\n        years.push({\n          year: finalYear\n        });\n      }\n      return years;\n    },\n    /**\n     * Add date to selectedDates list\n     * @param index\n     */\n    addToSelectedDates() {\n      if (this.helpCalendar.checkValidDate(this.calendar.selectedDatesItem)) {\n        let date = Object.assign({}, this.defaultDateFormat);\n        date.date = this.calendar.selectedDatesItem;\n        this.calendar.selectedDates.push(date);\n        this.calendar.selectedDatesItem = '';\n        this.markChooseDays();\n      }\n    },\n    /**\n     * Remove date from selectedDates list\n     * @param index\n     */\n    removeFromSelectedDates(index) {\n      this.calendar.selectedDates.splice(index, 1);\n      this.markChooseDays();\n    },\n    checkDateRangeEnd(date) {\n      if (Array.isArray(this.fConfigs.markedDateRange)) {\n        return this.fConfigs.markedDateRange.findIndex(range => {\n          return range.end === date;\n        }) !== -1;\n      }\n      return date === this.fConfigs.markedDateRange.end;\n    },\n    checkSelDates(type, startDate, itemDate, hoverDate) {\n      let startTime = this.helpCalendar.getDateFromFormat(startDate).getTime();\n      let itemTime = this.helpCalendar.getDateFromFormat(itemDate).getTime();\n      let hoverTime = this.helpCalendar.getDateFromFormat(hoverDate).getTime();\n      let days = type === 'min' ? this.fConfigs.minSelDays : this.fConfigs.maxSelDays - 2;\n      let minTime = days * 1000 * 60 * 60 * 24;\n      let rightTime = startTime + minTime;\n      let leftTime = startTime - minTime;\n      let result;\n      if (hoverTime > startTime) {\n        if (type === 'min') result = itemTime < rightTime && itemTime > startTime && this.fConfigs.minSelDays;else result = itemTime > rightTime && itemTime > startTime && this.fConfigs.maxSelDays;\n      } else if (hoverTime < startTime) {\n        if (type === 'min') result = itemTime > leftTime && itemTime < startTime && this.fConfigs.minSelDays;else result = itemTime < leftTime && itemTime < startTime && this.fConfigs.maxSelDays;\n      }\n      return result;\n    },\n    checkLimits(value) {\n      if (this.fConfigs.limits) {\n        let min = new Date(this.helpCalendar.getDateFromFormat(this.fConfigs.limits.min));\n        min.setDate(1);\n        min.setHours(0, 0, 0, 0);\n        let max = new Date(this.helpCalendar.getDateFromFormat(this.fConfigs.limits.max));\n        max.setDate(1);\n        max.setHours(0, 0, 0, 0);\n        this.allowPreDate = true;\n        this.allowNextDate = true;\n        let current = new Date(value);\n        current.setDate(1);\n        current.setHours(0, 0, 0, 0);\n        if (current <= min) {\n          this.allowPreDate = false;\n        }\n        if (current >= max) {\n          this.allowNextDate = false;\n        }\n      }\n    },\n    getTransition_() {\n      if (!this.fConfigs.transition) return '';\n      let name = '';\n      if (this.transitionPrefix === 'left') {\n        name = 'vfc-calendar-slide-left';\n      } else if (this.transitionPrefix === 'right') {\n        name = 'vfc-calendar-slide-right';\n      }\n      return name;\n    },\n    checkHiddenElement(elementName) {\n      return !this.fConfigs.hiddenElements.includes(elementName);\n    },\n    onFocusIn() {\n      if (this.fConfigs.isModal) {\n        this.showCalendar = true;\n      }\n    },\n    onFocusOut(e) {\n      if (this.fConfigs.isModal && !hElContains(this.popoverElement, e.relatedTarget)) {\n        return this.showCalendar = this.showMonthPicker = this.showYearPicker = false;\n      }\n    },\n    hideMonthYearPicker(e) {\n      this.$nextTick(() => {\n        if (this.showMonthPicker || this.showYearPicker) {\n          let key = this.showMonthPicker ? this.showMonthPicker - 1 : this.showYearPicker - 1;\n          const MYactive = this.$refs.calendars.querySelectorAll(`.vfc-content-MY-picker`)[key];\n          if (MYactive.contains(e.target)) {\n            return;\n          }\n          return this.showMonthPicker = this.showYearPicker = false;\n        }\n      });\n    },\n    checkDateRangeStart(date) {\n      if (Array.isArray(this.fConfigs.markedDateRange)) {\n        return this.fConfigs.markedDateRange.findIndex(range => {\n          return range.start === date;\n        }) !== -1;\n      }\n      return date === this.fConfigs.markedDateRange.start;\n    },\n    cleanRange() {\n      if (!this.isMultipleDateRange) {\n        this.calendar.dateRange.end = '';\n        this.calendar.dateRange.start = '';\n        return;\n      }\n      this.calendar.multipleDateRange = [];\n      // this.calendar.multipleDateRange.push({\n      //   start: '',\n      //   end: ''\n      // })\n    }\n  }\n};","map":{"version":3,"names":["helpCalendarClass","propsAndData","TimePicker","Arrows","WeekNumbers","Day","MonthYearPicker","PickerInputs","Footer","hElContains","hUniqueID","name","components","mixins","computed","startDMY","calendar","dateRange","start","split","endDMY","end","rangeIsSelected","isMultipleDateRange","multipleDateRange","length","helpCalendar","fConfigs","sundayStart","checkHiddenElement","dateFormat","dayNames","singleSelectedDate","get","res","displayTimeInput","validFormats","format","indexOf","selectedHour","selectedMinute","reverse","join","selectedDate","set","newValue","mask","getDateFromFormat","getMonth","created","setConfigs","initCalendar","mounted","timeFormat","placeholder","popoverElement","$refs","addEventListener","onFocusIn","onFocusOut","window","hideMonthYearPicker","capture","$watch","value","hasOwnProperty","lastElement","Math","max","Error","immediate","deep","$emit","beforeDestroy","removeEventListener","watch","enabledDates","handler","configs","markChooseDays","checkLimits","methods","setCalendarData","listRendering","currentDate","updateCalendar","setExistingCalendarData","isNotSeparatelyAndFirst","key","isSeparately","date","Date","getFullYear","listCalendars","i","calendarsCount","dateTop","monthNames","month","year","weeks","getFinalizedWeeks","push","isMultiple","$set","globalOptions","$getOptions","Object","keys","forEach","objectKey","$props","isModal","showCalendar","newCurrentDate","sundayName","splice","unshift","week","finalizedDays","days","day","now","isToday","setHours","getTime","checkMarked","markedDates","find","markDate","formatDate","isMarked","hide","isMouseToLeft","isMouseToRight","isHovered","isDateRangeStart","checkDateRangeStart","isDateRangeEnd","checkDateRangeEnd","hideLeftAndRightDays","clickDay","item","isDisabledDate","withTimePicker","isDateRange","isDatePicker","isMultipleDatePicker","dateDay","getDay","dayOfWeekString","disabledDayNames","includes","limits","min","clickDate","rangesLength","lastRange","startDate","$nextTick","startDateActive","oneDay","firstDate","secondDate","diffDays","round","abs","itemTime","isAutoCloseable","minSelDays","setDate","getDate","maxSelDays","selectedDates","dateIndex","findIndex","assign","defaultDateFormat","openTimePicker","endDate","map","range","dayMouseOver","limitMin","limitMax","limitDate","e","f","itemDate","thisDate","checkSelDates","minDateToRight","minDateToLeft","maxDateToLeft","maxDateToRight","PreMonth","calendarKey","allowPreDate","transitionPrefix","step","changeMonthStep","currentCalendar","NextMonth","allowNextDate","PreYear","showYearPicker","changeYearStep","NextYear","ChooseDate","newDate","openMonthPicker","changeMonthFunction","showMonthPicker","openYearPicker","changeYearFunction","showTimePicker","pickMonth","index","pickYear","getYearList","delta","years","finalYear","addToSelectedDates","checkValidDate","selectedDatesItem","removeFromSelectedDates","Array","isArray","markedDateRange","type","hoverDate","startTime","hoverTime","minTime","rightTime","leftTime","result","current","getTransition_","transition","elementName","hiddenElements","relatedTarget","MYactive","calendars","querySelectorAll","contains","target","cleanRange"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/node_modules/vue-functional-calendar/src/components/FunctionalCalendar.vue"],"sourcesContent":["<template>\n  <div class=\"vfc-popover-container\" ref=\"popoverElement\" tabindex=\"0\">\n    <PickerInputs\n      :fConfigs=\"fConfigs\"\n      :singleSelectedDate=\"singleSelectedDate\"\n      :calendar=\"calendar\"\n    >\n      <template v-slot:dateRangeInputs=\"props\">\n        <slot\n          :startDate=\"props.startDate\"\n          :endDate=\"props.endDate\"\n          :isTypeable=\"fConfigs.isTypeable\"\n          name=\"dateRangeInputs\"\n        >\n        </slot>\n      </template>\n      <template v-slot:datePickerInput=\"props\">\n        <slot\n          :selectedDate=\"props.selectedDate\"\n          :isTypeable=\"fConfigs.isTypeable\"\n          name=\"datePickerInput\"\n        >\n        </slot>\n      </template>\n    </PickerInputs>\n\n    <div\n      class=\"vfc-main-container\"\n      v-show=\"showCalendar\"\n      ref=\"mainContainer\"\n      :class=\"{\n        'vfc-modal':\n          fConfigs.isModal &&\n          (fConfigs.isDatePicker ||\n            fConfigs.isDateRange ||\n            fConfigs.isMultipleDatePicker),\n        'vfc-dark': fConfigs.isDark\n      }\"\n    >\n      <time-picker\n        v-if=\"showTimePicker\"\n        ref=\"timePicker\"\n        :height=\"$refs.popoverElement.clientHeight\"\n        :hours=\"activeHours\"\n        :minutes=\"activeMinutes\"\n      ></time-picker>\n\n      <template v-else>\n        <div class=\"vfc-calendars-container\">\n          <Arrows\n            :isMultiple=\"false\"\n            :fConfigs=\"fConfigs\"\n            :allowPreDate=\"allowPreDate\"\n            :allowNextDate=\"allowNextDate\"\n          >\n            <template v-slot:navigationArrowLeft>\n              <slot name=\"navigationArrowLeft\"></slot>\n            </template>\n            <template v-slot:navigationArrowRight>\n              <slot name=\"navigationArrowRight\"></slot>\n            </template>\n          </Arrows>\n\n          <div class=\"vfc-calendars\" ref=\"calendars\">\n            <div\n              class=\"vfc-calendar\"\n              v-for=\"(calendarItem, key) in listCalendars\"\n              :key=\"calendarItem.key\"\n            >\n              <month-year-picker\n                ref=\"monthContainer\"\n                :class=\"'vfc-' + fConfigs.titlePosition\"\n                :changeYearStep=\"changeYearStep\"\n                v-show=\"\n                  showMonthPicker === key + 1 || showYearPicker === key + 1\n                \"\n                :calendar-key=\"key\"\n              >\n              </month-year-picker>\n              <div class=\"vfc-content\">\n                <Arrows\n                  :isMultiple=\"true\"\n                  :fConfigs=\"fConfigs\"\n                  :allowPreDate=\"allowPreDate\"\n                  :allowNextDate=\"allowNextDate\"\n                  :calendar-key=\"key\"\n                >\n                  <template v-slot:navigationArrowLeft>\n                    <slot name=\"navigationArrowLeft\"></slot>\n                  </template>\n                  <template v-slot:navigationArrowRight>\n                    <slot name=\"navigationArrowRight\"></slot>\n                  </template>\n                </Arrows>\n\n                <transition tag=\"div\" :name=\"getTransition_()\" appear>\n                  <div\n                    class=\"vfc-top-date\"\n                    :class=\"'vfc-' + fConfigs.titlePosition\"\n                    v-if=\"checkHiddenElement('month')\"\n                  >\n                    <span\n                      @click.prevent=\"\n                        isNotSeparatelyAndFirst(key) && openMonthPicker(key + 1)\n                      \"\n                      :class=\"{\n                        'vfc-cursor-pointer vfc-underline':\n                          fConfigs.changeMonthFunction &&\n                          isNotSeparatelyAndFirst(key),\n                        'vfc-underline-active': showMonthPicker === key + 1\n                      }\"\n                    >\n                      {{ calendarItem.month }}</span\n                    >\n                    <span\n                      @click.prevent=\"\n                        isNotSeparatelyAndFirst(key) && openYearPicker(key + 1)\n                      \"\n                      :class=\"{\n                        'vfc-cursor-pointer vfc-underline':\n                          fConfigs.changeYearFunction &&\n                          isNotSeparatelyAndFirst(key),\n                        'vfc-underline-active': showYearPicker === key + 1\n                      }\"\n                    >\n                      {{ calendarItem.year }}\n                    </span>\n                  </div>\n                </transition>\n                <transition tag=\"div\" :name=\"getTransition_()\" appear>\n                  <div class=\"vfc-dayNames\">\n                    <span v-if=\"fConfigs.showWeekNumbers\"></span>\n                    <span\n                      v-for=\"(dayName, dayKey) in fConfigs.dayNames\"\n                      :key=\"key + dayKey + 1\"\n                      class=\"vfc-day\"\n                    >\n                      <template v-if=\"checkHiddenElement('dayNames')\">\n                        {{ dayName }}\n                      </template>\n                    </span>\n                  </div>\n                </transition>\n                <transition-group tag=\"div\" :name=\"getTransition_()\" appear>\n                  <div\n                    class=\"vfc-week\"\n                    v-for=\"(week, week_key) in calendarItem.weeks\"\n                    :key=\"key + week_key + 1\"\n                  >\n                    <WeekNumbers\n                      v-if=\"showWeekNumbers\"\n                      :number=\"week.number\"\n                      :borderColor=\"borderColor\"\n                    />\n                    <Day\n                      v-for=\"(day, day_key) in week.days\"\n                      ref=\"day\"\n                      :key=\"key + week_key + day_key + 1\"\n                      :isMultipleDateRange=\"isMultipleDateRange\"\n                      :day=\"day\"\n                      :fConfigs=\"fConfigs\"\n                      :calendar=\"calendar\"\n                      :helpCalendar=\"helpCalendar\"\n                      :week=\"week\"\n                      :day_key=\"day_key\"\n                      @dayMouseOver=\"dayMouseOver\"\n                      :alwaysUseDefaultClasses=\"alwaysUseDefaultClasses\"\n                    >\n                      <template v-slot:default=\"props\">\n                        <slot :week=\"props.week\" :day=\"props.day\"></slot>\n                      </template>\n                    </Day>\n                  </div>\n                  <template\n                    v-if=\"\n                      calendarItem.weeks.length < 6 &&\n                        !fConfigs.isLayoutExpandable\n                    \"\n                  >\n                    <!-- stabilizator -->\n                    <div\n                      style=\"height: 32.6px\"\n                      v-for=\"moreWeekKey in 6 - calendarItem.weeks.length\"\n                      :key=\"key + moreWeekKey + 'moreWeek'\"\n                    >\n                      &nbsp;\n                    </div>\n                  </template>\n                </transition-group>\n              </div>\n            </div>\n          </div>\n          <Footer v-if=\"canClearRange || $slots['footer']\">\n            <template v-slot:footer>\n              <div @click=\"cleanRange\">\n                <slot name=\"cleaner\">\n                  <div\n                    v-if=\"canClearRange && fConfigs.isDateRange\"\n                    class=\"rangeCleaner\"\n                  >\n                    <span\n                      :class=\"[rangeIsSelected ? 'active' : 'disabled']\"\n                      @click=\"cleanRange\"\n                      >Clear Range{{ isMultipleDateRange && 's' }}</span\n                    >\n                  </div>\n                </slot>\n              </div>\n              <slot name=\"footer\"></slot>\n            </template>\n            <!-- <span>&nbsp;</span> -->\n          </Footer>\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport helpCalendarClass from '../assets/js/helpCalendar'\nimport { propsAndData } from '../mixins/propsAndData'\nimport TimePicker from '../components/TimePicker.vue'\nimport Arrows from '../components/Arrows.vue'\nimport WeekNumbers from '../components/WeekNumbers.vue'\nimport Day from '../components/Day.vue'\nimport MonthYearPicker from '../components/MonthYearPicker.vue'\nimport PickerInputs from '../components/PickerInputs.vue'\nimport Footer from '../components/Footer.vue'\n\nimport { hElContains, hUniqueID } from '../utils/helpers'\n// import calendarMethods from '../utils/calendarMethods'\n\nexport default {\n  name: 'FunctionalCalendar',\n  components: {\n    MonthYearPicker,\n    TimePicker,\n    PickerInputs,\n    Arrows,\n    Footer,\n    Day,\n    WeekNumbers\n  },\n  mixins: [propsAndData],\n  computed: {\n    startDMY() {\n      //start only with Day Month and Year\n      if (this.calendar.dateRange.start) {\n        return this.calendar.dateRange.start.split(' ')[0]\n      }\n      return ''\n    },\n    endDMY() {\n      //end only with Day Month and Year\n      if (this.calendar.dateRange.end) {\n        return this.calendar.dateRange.end.split(' ')[0]\n      }\n      return ''\n    },\n    rangeIsSelected() {\n      if (!this.isMultipleDateRange)\n        return !!(this.calendar.dateRange.end && this.calendar.dateRange.start)\n      return this.calendar.multipleDateRange.length > 0\n    },\n    helpCalendar() {\n      return new helpCalendarClass(\n        this.fConfigs.sundayStart,\n        this.checkHiddenElement('leftAndRightDays'),\n        this.fConfigs.dateFormat,\n        this.fConfigs.dayNames\n      )\n    },\n    singleSelectedDate: {\n      get() {\n        let res = ''\n        if (this.displayTimeInput) {\n          const validFormats = [\n            'HH:MM',\n            'HH:mm',\n            'hh:MM',\n            'hh:mm',\n            'MM:HH',\n            'mm:HH',\n            'MM:hh',\n            'mm:hh'\n          ]\n          let format = this.fConfigs.dateFormat\n          if (this.dateFormat) {\n            format = this.dateFormat\n          }\n          if (validFormats.indexOf(format.split(' ')[1]) > 3) {\n            res +=\n              ' ' +\n              [this.calendar.selectedHour, this.calendar.selectedMinute]\n                .reverse()\n                .join(':')\n          } else {\n            res +=\n              ' ' +\n              [this.calendar.selectedHour, this.calendar.selectedMinute].join(\n                ':'\n              )\n          }\n        }\n\n        return this.calendar.selectedDate\n          ? this.calendar.selectedDate + res\n          : ''\n      },\n      set(newValue) {\n        newValue = this.helpCalendar.mask(newValue)\n        if (this.helpCalendar.getDateFromFormat(newValue).getMonth()) {\n          this.calendar.selectedDate = newValue\n        }\n      }\n    }\n  },\n  created() {\n    this.setConfigs()\n    this.initCalendar()\n  },\n  mounted() {\n    //show time placeholder\n    if (this.displayTimeInput) {\n      const timeFormat = this.fConfigs.placeholder.split(' ')[1]\n      if (!timeFormat) {\n        this.fConfigs.placeholder += ' hh:mm'\n      }\n    }\n\n    this.popoverElement = this.$refs.popoverElement\n    // Event\n    this.popoverElement.addEventListener('focusin', this.onFocusIn)\n    this.popoverElement.addEventListener('focusout', this.onFocusOut)\n    window.addEventListener('click', this.hideMonthYearPicker, {\n      capture: true\n    })\n\n    // Reacts to external selected dates\n    this.$watch(\n      'value',\n      function(value) {\n        if (\n          typeof value === 'object' &&\n          (value.hasOwnProperty('dateRange') ||\n            value.hasOwnProperty('selectedDate'))\n        ) {\n          this.calendar = value\n        } else if (\n          typeof value === 'object' &&\n          value.hasOwnProperty('multipleDateRange')\n        ) {\n          this.calendar.multipleDateRange = value.multipleDateRange\n          const lastElement = this.calendar.multipleDateRange[\n            Math.max(0, this.calendar.multipleDateRange.length - 1)\n          ]\n          if (\n            lastElement &&\n            ((lastElement.start && !lastElement.end) ||\n              (!lastElement.start && lastElement.end))\n          ) {\n            throw new Error('Invalid Data Range')\n          }\n        }\n      },\n      { immediate: true, deep: true }\n    )\n\n    this.$watch(\n      'showCalendar',\n      function(value) {\n        if (value) this.$emit('opened')\n        else this.$emit('closed')\n      },\n      { immediate: true, deep: true }\n    )\n  },\n  beforeDestroy: function() {\n    window.removeEventListener('focusin', this.onFocusIn)\n    window.removeEventListener('focusout', this.onFocusOut)\n    window.removeEventListener('click', this.hideMonthYearPicker)\n  },\n  watch: {\n    enabledDates: {\n      handler() {\n        this.fConfigs.enabledDates = this.enabledDates;\n      },\n      deep: true\n    },\n    'configs.enabledDates': {\n      handler() {\n        this.fConfigs.enabledDates = this.configs.enabledDates;\n      },\n      deep: true\n    },\n    fConfigs: {\n      handler() {\n        this.markChooseDays()\n      },\n      deep: true,\n      immediate: true\n    },\n    calendar: {\n      handler() {\n        this.markChooseDays()\n      },\n      deep: true,\n      immediate: true\n    },\n    'calendar.currentDate': {\n      handler(value) {\n        this.$emit('input', this.calendar)\n        this.checkLimits(value)\n      }\n    }\n  },\n  methods: {\n    initCalendar() {\n      this.setCalendarData()\n      this.listRendering()\n      this.markChooseDays()\n      this.checkLimits(this.calendar.currentDate)\n    },\n    updateCalendar() {\n      this.setExistingCalendarData()\n      this.listRendering()\n      this.markChooseDays()\n    },\n    isNotSeparatelyAndFirst(key) {\n      return this.isSeparately || key == 0\n    },\n    setCalendarData() {\n      let date = this.calendar.currentDate\n      date = new Date(date.getFullYear(), date.getMonth() - 1)\n\n      this.listCalendars = []\n\n      for (let i = 0; i < this.fConfigs.calendarsCount; i++) {\n        date = new Date(date.getFullYear(), date.getMonth() + 1)\n\n        let calendar = {\n          key: i + hUniqueID(),\n          date: date,\n          dateTop: `${\n            this.fConfigs.monthNames[date.getMonth()]\n          } ${date.getFullYear()}`,\n          month: this.fConfigs.monthNames[date.getMonth()],\n          year: date.getFullYear(),\n          weeks: this.helpCalendar.getFinalizedWeeks(\n            date.getMonth(),\n            date.getFullYear()\n          )\n        }\n\n        this.listCalendars.push(calendar)\n\n        if (!this.fConfigs.isMultiple) {\n          break\n        }\n      }\n    },\n    setExistingCalendarData() {\n      for (let i = 0; i < this.listCalendars.length; i++) {\n        let calendar = this.listCalendars[i]\n        let date = calendar.date\n\n        this.$set(this.listCalendars, i, {\n          key: calendar.key,\n          date: date,\n          dateTop: `${\n            this.fConfigs.monthNames[date.getMonth()]\n          } ${date.getFullYear()}`,\n          month: this.fConfigs.monthNames[date.getMonth()],\n          year: date.getFullYear(),\n          weeks: this.helpCalendar.getFinalizedWeeks(\n            date.getMonth(),\n            date.getFullYear()\n          )\n        })\n\n        if (!this.fConfigs.isMultiple) {\n          break\n        }\n      }\n    },\n    setConfigs() {\n      let globalOptions\n      if (typeof this.$getOptions !== 'undefined') {\n        // Global Options\n        globalOptions = this.$getOptions()\n        Object.keys(globalOptions).forEach(objectKey => {\n          if (typeof this.fConfigs[objectKey] !== 'undefined') {\n            this.$set(this.fConfigs, objectKey, globalOptions[objectKey])\n          }\n        })\n      }\n\n      if (typeof this.configs !== 'undefined') {\n        Object.keys(this.fConfigs).forEach(objectKey => {\n          if (typeof this.configs[objectKey] !== 'undefined') {\n            // Get From Configs\n            this.$set(this.fConfigs, objectKey, this.configs[objectKey])\n          }\n        })\n      } else {\n        Object.keys(this.$props).forEach(objectKey => {\n          if (\n            typeof this.fConfigs[objectKey] !== 'undefined' &&\n            typeof this.$props[objectKey] !== 'undefined'\n          ) {\n            this.$set(this.fConfigs, objectKey, this.$props[objectKey])\n          }\n        })\n      }\n\n      // Is Modal\n      if (this.fConfigs.isModal) this.showCalendar = false\n\n      // Placeholder\n      if (!this.fConfigs.placeholder)\n        this.fConfigs.placeholder = this.fConfigs.dateFormat\n\n      if (typeof this.newCurrentDate !== 'undefined') {\n        this.calendar.currentDate = this.newCurrentDate\n      }\n\n      // Sunday Start\n      if (this.fConfigs.sundayStart) {\n        let dayNames = [...this.fConfigs.dayNames]\n        let sundayName = dayNames[dayNames.length - 1]\n        dayNames.splice(dayNames.length - 1, 1)\n        dayNames.unshift(sundayName)\n        this.fConfigs.dayNames = dayNames\n      }\n    },\n    listRendering() {\n      // Each Calendars\n      this.listCalendars.forEach(calendar => {\n        // Set Calendar Weeks\n        calendar.weeks.forEach(week => {\n          let finalizedDays = []\n\n          week.days.forEach(day => {\n            let date = new Date(day.year, day.month, day.day)\n            let now = new Date()\n\n            let isToday = false\n\n            date.setHours(0, 0, 0, 0)\n            now.setHours(0, 0, 0, 0)\n\n            if (date.getTime() === now.getTime()) {\n              isToday = true\n            }\n\n            let checkMarked\n            // With Custom Classes\n            if (typeof this.fConfigs.markedDates[0] === 'object') {\n              checkMarked = this.fConfigs.markedDates.find(markDate => {\n                return markDate.date === this.helpCalendar.formatDate(date)\n              })\n            } else {\n              // Without Classes\n              checkMarked = this.fConfigs.markedDates.find(markDate => {\n                return markDate === this.helpCalendar.formatDate(date)\n              })\n            }\n\n            if (this.startDMY === this.helpCalendar.formatDate(date)) {\n              checkMarked = true\n            }\n\n            let isMarked = false\n            if (typeof checkMarked !== 'undefined') {\n              isMarked = true\n            }\n\n            finalizedDays.push({\n              day: day.day,\n              date: this.helpCalendar.formatDate(date),\n              hide: day.hide,\n              isMouseToLeft: false,\n              isMouseToRight: false,\n              isHovered: false,\n              isDateRangeStart: this.checkDateRangeStart(\n                this.helpCalendar.formatDate(date)\n              ),\n              isDateRangeEnd: this.checkDateRangeEnd(\n                this.helpCalendar.formatDate(date)\n              ),\n              hideLeftAndRightDays: day.hideLeftAndRightDays,\n              isToday,\n              isMarked\n            })\n          })\n\n          week.days = finalizedDays\n        })\n      })\n    },\n    clickDay(item, isDisabledDate) {\n      if (this.fConfigs.withTimePicker && this.fConfigs.isDateRange) {\n        item.date = item.date + ' 00:00'\n      }\n      this.$emit('dayClicked', item)\n\n      if (\n        !this.fConfigs.isDateRange &&\n        !this.fConfigs.isDatePicker &&\n        !this.fConfigs.isMultipleDatePicker\n      ) {\n        return false\n      }\n\n      //Disabled Dates - Start\n\n      // Disable days of week if set in configuration\n      let dateDay = this.helpCalendar.getDateFromFormat(item.date).getDay() - 1\n      if (dateDay === -1) {\n        dateDay = 6\n      }\n\n      let dayOfWeekString = this.fConfigs.dayNames[dateDay]\n      if (\n        this.fConfigs.disabledDayNames.includes(dayOfWeekString) ||\n        isDisabledDate(item.date)\n      ) {\n        return false\n      }\n\n      //Disabled Dates - End\n\n      // Limits\n      if (this.fConfigs.limits) {\n        let min = this.helpCalendar\n          .getDateFromFormat(this.fConfigs.limits.min)\n          .getTime()\n        let max = this.helpCalendar\n          .getDateFromFormat(this.fConfigs.limits.max)\n          .getTime()\n        let date = this.helpCalendar.getDateFromFormat(item.date).getTime()\n\n        if (date < min || date > max) {\n          return false\n        }\n      }\n\n      // Date Multiple Range\n      if (this.fConfigs.isMultipleDateRange) {\n        let clickDate = this.helpCalendar\n          .getDateFromFormat(item.date.split(' ')[0])\n          .getTime()\n        let rangesLength = this.calendar.multipleDateRange.length\n        let lastRange = this.calendar.multipleDateRange[rangesLength - 1]\n        let startDate = ''\n        // if (lastRange) {\n        //   // if (lastRange.start && lastRange.end)\n        // } else\n\n        if (!lastRange) {\n          this.calendar.multipleDateRange.push({ end: '', start: '' })\n          rangesLength = this.calendar.multipleDateRange.length\n          lastRange = this.calendar.multipleDateRange[rangesLength - 1]\n        }\n\n        if (lastRange.start) {\n          startDate = this.helpCalendar.getDateFromFormat(lastRange.start)\n        }\n\n        // Two dates is not empty\n        if (lastRange.start !== '' && lastRange.end !== '') {\n          this.calendar.multipleDateRange.push({ end: '', start: item.date })\n          // lastRange.start = item.date\n          // lastRange.end = ''\n          // Not date selected\n        } else if (lastRange.start === '' && lastRange.end === '') {\n          lastRange.start = item.date\n          // Start Date not empty, chose date > start date\n        } else if (lastRange.end === '' && clickDate > startDate.getTime()) {\n          lastRange.end = item.date\n          // Start date not empty, chose date <= start date (also same date range select)\n        } else if (lastRange.start !== '' && clickDate <= startDate.getTime()) {\n          this.$nextTick(() => {\n            if (this.calendar.withTimePicker) {\n              this.$refs['timePicker'].startDateActive = true\n            }\n          })\n          lastRange.end = lastRange.start\n          lastRange.start = item.date\n        }\n\n        //Get number of days between date range dates\n        if (lastRange.start !== '' && lastRange.end !== '') {\n          let oneDay = 24 * 60 * 60 * 1000\n          let firstDate = this.helpCalendar.getDateFromFormat(lastRange.start)\n          let secondDate = this.helpCalendar.getDateFromFormat(lastRange.end)\n          let diffDays = Math.round(\n            Math.abs((firstDate.getTime() - secondDate.getTime()) / oneDay)\n          )\n          let itemTime = this.helpCalendar\n            .getDateFromFormat(item.date)\n            .getTime()\n\n          this.$emit('selectedDaysCount', diffDays)\n\n          // Is Auto Closeable\n          if (this.fConfigs.isModal && this.fConfigs.isAutoCloseable) {\n            this.showCalendar = false\n          }\n\n          // Minimum Selected Days\n          let minSelDays = this.fConfigs.minSelDays\n\n          if (\n            minSelDays &&\n            itemTime >= startDate.getTime() &&\n            diffDays < minSelDays\n          ) {\n            startDate.setDate(startDate.getDate() + (minSelDays - 1))\n            lastRange.end = this.helpCalendar.formatDate(startDate)\n          }\n\n          if (\n            minSelDays &&\n            itemTime < startDate.getTime() &&\n            diffDays < minSelDays\n          ) {\n            startDate.setDate(startDate.getDate() - (minSelDays - 1))\n            lastRange.start = this.helpCalendar.formatDate(startDate)\n          }\n\n          // Maximum Selected Days\n          let maxSelDays = this.fConfigs.maxSelDays\n\n          if (\n            maxSelDays &&\n            itemTime >= startDate.getTime() &&\n            diffDays >= maxSelDays\n          ) {\n            startDate.setDate(startDate.getDate() + (maxSelDays - 1))\n            lastRange.end = this.helpCalendar.formatDate(startDate)\n          }\n\n          if (\n            maxSelDays &&\n            itemTime < startDate.getTime() &&\n            diffDays >= maxSelDays\n          ) {\n            startDate.setDate(startDate.getDate() - (maxSelDays - 1))\n            lastRange.start = this.helpCalendar.formatDate(startDate)\n          }\n        }\n\n        this.$emit('input', this.calendar)\n      } // Date Range\n      else if (this.fConfigs.isDateRange) {\n        let clickDate = this.helpCalendar\n          .getDateFromFormat(item.date.split(' ')[0])\n          .getTime()\n\n        let startDate = ''\n        if (this.calendar.dateRange.start) {\n          startDate = this.helpCalendar.getDateFromFormat(\n            this.calendar.dateRange.start\n          )\n        }\n\n        // Two dates is not empty\n        if (\n          this.calendar.dateRange.start !== '' &&\n          this.calendar.dateRange.end !== ''\n        ) {\n          this.calendar.dateRange.start = item.date\n          this.calendar.dateRange.end = ''\n          // Not date selected\n        } else if (\n          this.calendar.dateRange.start === '' &&\n          this.calendar.dateRange.end === ''\n        ) {\n          this.calendar.dateRange.start = item.date\n          // Start Date not empty, chose date > start date\n        } else if (\n          this.calendar.dateRange.end === '' &&\n          clickDate > startDate.getTime()\n        ) {\n          this.calendar.dateRange.end = item.date\n          // Start date not empty, chose date <= start date (also same date range select)\n        } else if (\n          this.calendar.dateRange.start !== '' &&\n          clickDate <= startDate.getTime()\n        ) {\n          this.$nextTick(() => {\n            if (this.calendar.dateRange && this.calendar.withTimePicker) {\n              this.$refs['timePicker'].startDateActive = true\n            }\n          })\n          this.calendar.dateRange.end = this.calendar.dateRange.start\n          this.calendar.dateRange.start = item.date\n        }\n\n        //Get number of days between date range dates\n        if (\n          this.calendar.dateRange.start !== '' &&\n          this.calendar.dateRange.end !== ''\n        ) {\n          let oneDay = 24 * 60 * 60 * 1000\n          let firstDate = this.helpCalendar.getDateFromFormat(\n            this.calendar.dateRange.start\n          )\n          let secondDate = this.helpCalendar.getDateFromFormat(\n            this.calendar.dateRange.end\n          )\n          let diffDays = Math.round(\n            Math.abs((firstDate.getTime() - secondDate.getTime()) / oneDay)\n          )\n          let itemTime = this.helpCalendar\n            .getDateFromFormat(item.date)\n            .getTime()\n\n          this.$emit('selectedDaysCount', diffDays)\n\n          // Is Auto Closeable\n          if (this.fConfigs.isModal && this.fConfigs.isAutoCloseable) {\n            this.showCalendar = false\n          }\n\n          // Minimum Selected Days\n          let minSelDays = this.fConfigs.minSelDays\n\n          if (\n            minSelDays &&\n            itemTime >= startDate.getTime() &&\n            diffDays < minSelDays\n          ) {\n            startDate.setDate(startDate.getDate() + (minSelDays - 1))\n            this.calendar.dateRange.end = this.helpCalendar.formatDate(\n              startDate\n            )\n          }\n\n          if (\n            minSelDays &&\n            itemTime < startDate.getTime() &&\n            diffDays < minSelDays\n          ) {\n            startDate.setDate(startDate.getDate() - (minSelDays - 1))\n            this.calendar.dateRange.start = this.helpCalendar.formatDate(\n              startDate\n            )\n          }\n\n          // Maximum Selected Days\n          let maxSelDays = this.fConfigs.maxSelDays\n\n          if (\n            maxSelDays &&\n            itemTime >= startDate.getTime() &&\n            diffDays >= maxSelDays\n          ) {\n            startDate.setDate(startDate.getDate() + (maxSelDays - 1))\n            this.calendar.dateRange.end = this.helpCalendar.formatDate(\n              startDate\n            )\n          }\n\n          if (\n            maxSelDays &&\n            itemTime < startDate.getTime() &&\n            diffDays >= maxSelDays\n          ) {\n            startDate.setDate(startDate.getDate() - (maxSelDays - 1))\n            this.calendar.dateRange.start = this.helpCalendar.formatDate(\n              startDate\n            )\n          }\n        }\n\n        this.$emit('input', this.calendar)\n      } else if (this.fConfigs.isDatePicker) {\n        this.calendar.selectedDate = item.date\n        this.$emit('input', this.calendar)\n\n        // Is Auto Closeable\n        if (this.fConfigs.isModal && this.fConfigs.isAutoCloseable) {\n          this.showCalendar = false\n        }\n      } else if (this.fConfigs.isMultipleDatePicker) {\n        if (\n          this.calendar.hasOwnProperty('selectedDates') &&\n          this.calendar.selectedDates.find(date => date.date === item.date)\n        ) {\n          let dateIndex = this.calendar.selectedDates.findIndex(\n            date => date.date === item.date\n          )\n          this.calendar.selectedDates.splice(dateIndex, 1)\n        } else {\n          let date = Object.assign({}, this.defaultDateFormat)\n          date.date = item.date\n\n          if (!this.calendar.hasOwnProperty('selectedDates')) {\n            this.calendar.selectedDates = []\n          }\n\n          this.calendar.selectedDates.push(date)\n        }\n\n        this.$emit('input', this.calendar)\n      }\n\n      this.markChooseDays()\n\n      // Time Picker\n      if (this.fConfigs.withTimePicker) {\n        if (this.fConfigs.isDateRange || this.fConfigs.isDatePicker) {\n          this.openTimePicker()\n        }\n\n        if (\n          this.calendar.selectedDates.find(date => date.date === item.date) &&\n          this.fConfigs.isMultipleDatePicker\n        ) {\n          this.openTimePicker()\n        }\n      }\n\n      this.$emit('choseDay', item)\n    },\n    markChooseDays() {\n      let startDate = this.startDMY\n      let endDate = this.endDMY\n      this.listCalendars.forEach(calendar => {\n        calendar.weeks.forEach(week => {\n          week.days.forEach(day => {\n            day.isMarked = false\n            day.date = day.date.split(' ')[0]\n            // Date Picker\n            if (this.fConfigs.isDatePicker) {\n              if (this.calendar.selectedDate === day.date) day.isMarked = true\n            } else if (this.fConfigs.isMultipleDatePicker) {\n              if (\n                this.calendar.hasOwnProperty('selectedDates') &&\n                this.calendar.selectedDates.find(date => date.date === day.date)\n              )\n                day.isMarked = true\n            } else {\n              day.isMouseToLeft = false\n              day.isMouseToRight = false\n              // Date Range\n              if (startDate === day.date) {\n                day.isMouseToLeft = !!endDate\n                day.isMarked = true\n              }\n\n              if (endDate === day.date) {\n                day.isMouseToRight = !!endDate\n                day.isMarked = true\n              }\n              //Multiple Range\n              if (this.calendar.multipleDateRange) {\n                if (\n                  ~this.calendar.multipleDateRange\n                    .map(range => range.start.split(' ')[0])\n                    .indexOf(day.date)\n                ) {\n                  day.isMouseToLeft = !!endDate\n                  day.isMarked = true\n                }\n                if (\n                  ~this.calendar.multipleDateRange\n                    .map(range => range.end.split(' ')[0])\n                    .indexOf(day.date)\n                ) {\n                  day.isMouseToRight = !!endDate\n                  day.isMarked = true\n                }\n                this.calendar.multipleDateRange.forEach(range => {\n                  if (range.start && range.start === range.end) {\n                    day.isMouseToLeft = false\n                    day.isMouseToRight = false\n                  }\n                  if (range.start && range.end) {\n                    if (\n                      this.helpCalendar.getDateFromFormat(day.date).getTime() >\n                        this.helpCalendar.getDateFromFormat(range.start) &&\n                      this.helpCalendar.getDateFromFormat(day.date) <\n                        this.helpCalendar.getDateFromFormat(range.end)\n                    ) {\n                      day.isMarked = true\n                    }\n                  }\n                })\n              }\n\n              if (startDate && startDate === endDate) {\n                day.isMouseToLeft = false\n                day.isMouseToRight = false\n              }\n              if (startDate && endDate) {\n                if (\n                  this.helpCalendar.getDateFromFormat(day.date).getTime() >\n                    this.helpCalendar.getDateFromFormat(startDate) &&\n                  this.helpCalendar.getDateFromFormat(day.date) <\n                    this.helpCalendar.getDateFromFormat(endDate)\n                ) {\n                  day.isMarked = true\n                }\n              }\n            }\n            if (this.fConfigs.markedDates.includes(day.date))\n              day.isMarked = true\n          })\n        })\n      })\n    },\n    dayMouseOver(date) {\n      this.$emit('dayMouseOver', date)\n\n      if (!this.fConfigs.isDateRange) {\n        return false\n      }\n\n      // Limits\n      if (this.fConfigs.limits) {\n        let limitMin = this.helpCalendar\n          .getDateFromFormat(this.fConfigs.limits.min)\n          .getTime()\n        let limitMax = this.helpCalendar\n          .getDateFromFormat(this.fConfigs.limits.max)\n          .getTime()\n        let limitDate = this.helpCalendar.getDateFromFormat(date).getTime()\n\n        if (limitDate < limitMin || limitDate > limitMax) {\n          return false\n        }\n      }\n\n      //Multiple Range\n\n      if (\n        (this.calendar.dateRange.start === '' ||\n          this.calendar.dateRange.end === '') &&\n        (this.calendar.dateRange.start !== '' ||\n          this.calendar.dateRange.end !== '')\n      ) {\n        for (let e = 0; e < this.listCalendars.length; e++) {\n          let calendar = this.listCalendars[e]\n\n          for (let f = 0; f < calendar.weeks.length; f++) {\n            let week = calendar.weeks[f]\n\n            for (let i = 0; i < week.days.length; i++) {\n              let item = week.days[i]\n\n              this.listCalendars[e].weeks[f].days[i].isHovered = false\n              if (\n                item.date !== this.startDMY &&\n                !this.fConfigs.markedDates.includes(item.date)\n              ) {\n                this.listCalendars[e].weeks[f].days[i].isMarked = false\n              }\n\n              if (this.calendar.dateRange.start) {\n                let itemDate = this.helpCalendar\n                  .getDateFromFormat(item.date)\n                  .getTime()\n\n                let thisDate = this.helpCalendar\n                  .getDateFromFormat(date)\n                  .getTime()\n                let startDate = this.helpCalendar.getDateFromFormat(\n                  this.calendar.dateRange.start\n                )\n\n                this.listCalendars[e].weeks[f].days[i].isMouseToLeft =\n                  (itemDate === startDate.getTime() &&\n                    thisDate > startDate.getTime()) ||\n                  (itemDate === thisDate && thisDate < startDate.getTime())\n                this.listCalendars[e].weeks[f].days[i].isMouseToRight =\n                  (itemDate === startDate.getTime() &&\n                    thisDate < startDate.getTime()) ||\n                  (itemDate === thisDate && thisDate > startDate.getTime())\n\n                let dateDay =\n                  this.helpCalendar.getDateFromFormat(item.date).getDay() - 1\n                if (dateDay === -1) {\n                  dateDay = 6\n                }\n\n                let dayOfWeekString = this.fConfigs.dayNames[dateDay]\n                if (\n                  !this.fConfigs.disabledDayNames.includes(dayOfWeekString) &&\n                  ((itemDate > startDate.getTime() && itemDate < thisDate) ||\n                    (itemDate < startDate.getTime() && itemDate > thisDate))\n                ) {\n                  this.listCalendars[e].weeks[f].days[i].isMarked = true\n                }\n\n                if (!this.calendar.dateRange.end && itemDate === thisDate) {\n                  this.listCalendars[e].weeks[f].days[i].isHovered = false\n                }\n\n                if (\n                  this.checkSelDates(\n                    'min',\n                    this.calendar.dateRange.start,\n                    item.date,\n                    date\n                  )\n                ) {\n                  this.listCalendars[e].weeks[f].days[i].isMarked = true\n\n                  let minDateToRight, minDateToLeft\n                  minDateToLeft = new Date(startDate.getTime())\n                  minDateToRight = new Date(startDate.getTime())\n                  minDateToLeft.setDate(\n                    minDateToLeft.getDate() - this.fConfigs.minSelDays + 1\n                  )\n                  minDateToRight.setDate(\n                    minDateToRight.getDate() + this.fConfigs.minSelDays - 1\n                  )\n\n                  if (\n                    thisDate >= minDateToLeft.getTime() &&\n                    this.helpCalendar.formatDate(minDateToLeft) === item.date\n                  ) {\n                    this.listCalendars[e].weeks[f].days[i].isMarked = false\n                    this.listCalendars[e].weeks[f].days[i].isMouseToLeft = true\n                    this.listCalendars[e].weeks[f].days[i].isHovered = true\n                  } else if (\n                    thisDate <= minDateToRight.getTime() &&\n                    this.helpCalendar.formatDate(minDateToRight) === item.date\n                  ) {\n                    this.listCalendars[e].weeks[f].days[i].isMarked = false\n                    this.listCalendars[e].weeks[f].days[i].isMouseToRight = true\n                    this.listCalendars[e].weeks[f].days[i].isHovered = true\n                  }\n                }\n\n                if (\n                  this.checkSelDates(\n                    'max',\n                    this.calendar.dateRange.start,\n                    item.date,\n                    date\n                  )\n                ) {\n                  this.listCalendars[e].weeks[f].days[i].isMarked = false\n                  this.listCalendars[e].weeks[f].days[i].isHovered = false\n                  this.listCalendars[e].weeks[f].days[i].isMouseToLeft = false\n                  this.listCalendars[e].weeks[f].days[i].isMouseToRight = false\n\n                  let maxDateToLeft, maxDateToRight\n                  maxDateToLeft = new Date(startDate.getTime())\n                  maxDateToRight = new Date(startDate.getTime())\n                  maxDateToLeft.setDate(\n                    maxDateToLeft.getDate() - this.fConfigs.maxSelDays + 1\n                  )\n                  maxDateToRight.setDate(\n                    maxDateToRight.getDate() + this.fConfigs.maxSelDays - 1\n                  )\n\n                  if (thisDate <= maxDateToLeft.getTime()) {\n                    if (\n                      this.helpCalendar.formatDate(maxDateToLeft) === item.date\n                    ) {\n                      this.listCalendars[e].weeks[f].days[i].isHovered = true\n                      this.listCalendars[e].weeks[f].days[\n                        i\n                      ].isMouseToLeft = true\n                    }\n                  }\n\n                  if (thisDate >= maxDateToRight.getTime()) {\n                    if (\n                      this.helpCalendar.formatDate(maxDateToRight) === item.date\n                    ) {\n                      this.listCalendars[e].weeks[f].days[i].isHovered = true\n                      this.listCalendars[e].weeks[f].days[\n                        i\n                      ].isMouseToRight = true\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (this.calendar.multipleDateRange) {\n        let range = this.calendar.multipleDateRange[\n          this.calendar.multipleDateRange.length - 1\n        ]\n        if (!range) return\n        // this.calendar.multipleDateRange.forEach((range, index) => {\n        if (\n          (range.start === '' || range.end === '') &&\n          (range.start !== '' || range.end !== '')\n        ) {\n          for (let e = 0; e < this.listCalendars.length; e++) {\n            let calendar = this.listCalendars[e]\n\n            for (let f = 0; f < calendar.weeks.length; f++) {\n              let week = calendar.weeks[f]\n\n              for (let i = 0; i < week.days.length; i++) {\n                let item = week.days[i]\n\n                this.listCalendars[e].weeks[f].days[i].isHovered = false\n                if (\n                  item.date !== this.startDMY &&\n                  !this.fConfigs.markedDates.includes(item.date)\n                ) {\n                  this.listCalendars[e].weeks[f].days[i].isMarked = false\n                }\n\n                if (range.start) {\n                  let itemDate = this.helpCalendar\n                    .getDateFromFormat(item.date)\n                    .getTime()\n\n                  let thisDate = this.helpCalendar\n                    .getDateFromFormat(date)\n                    .getTime()\n                  let startDate = this.helpCalendar.getDateFromFormat(\n                    range.start\n                  )\n\n                  this.listCalendars[e].weeks[f].days[i].isMouseToLeft =\n                    (itemDate === startDate.getTime() &&\n                      thisDate > startDate.getTime()) ||\n                    (itemDate === thisDate && thisDate < startDate.getTime())\n                  this.listCalendars[e].weeks[f].days[i].isMouseToRight =\n                    (itemDate === startDate.getTime() &&\n                      thisDate < startDate.getTime()) ||\n                    (itemDate === thisDate && thisDate > startDate.getTime())\n\n                  let dateDay =\n                    this.helpCalendar.getDateFromFormat(item.date).getDay() - 1\n                  if (dateDay === -1) {\n                    dateDay = 6\n                  }\n\n                  let dayOfWeekString = this.fConfigs.dayNames[dateDay]\n                  if (\n                    !this.fConfigs.disabledDayNames.includes(dayOfWeekString) &&\n                    ((itemDate > startDate.getTime() && itemDate < thisDate) ||\n                      (itemDate < startDate.getTime() && itemDate > thisDate))\n                  ) {\n                    this.listCalendars[e].weeks[f].days[i].isMarked = true\n                  }\n\n                  if (!range.end && itemDate === thisDate) {\n                    this.listCalendars[e].weeks[f].days[i].isHovered = false\n                  }\n\n                  if (this.checkSelDates('min', range.start, item.date, date)) {\n                    this.listCalendars[e].weeks[f].days[i].isMarked = true\n\n                    let minDateToRight, minDateToLeft\n                    minDateToLeft = new Date(startDate.getTime())\n                    minDateToRight = new Date(startDate.getTime())\n                    minDateToLeft.setDate(\n                      minDateToLeft.getDate() - this.fConfigs.minSelDays + 1\n                    )\n                    minDateToRight.setDate(\n                      minDateToRight.getDate() + this.fConfigs.minSelDays - 1\n                    )\n\n                    if (\n                      thisDate >= minDateToLeft.getTime() &&\n                      this.helpCalendar.formatDate(minDateToLeft) === item.date\n                    ) {\n                      this.listCalendars[e].weeks[f].days[i].isMarked = false\n                      this.listCalendars[e].weeks[f].days[\n                        i\n                      ].isMouseToLeft = true\n                      this.listCalendars[e].weeks[f].days[i].isHovered = true\n                    } else if (\n                      thisDate <= minDateToRight.getTime() &&\n                      this.helpCalendar.formatDate(minDateToRight) === item.date\n                    ) {\n                      this.listCalendars[e].weeks[f].days[i].isMarked = false\n                      this.listCalendars[e].weeks[f].days[\n                        i\n                      ].isMouseToRight = true\n                      this.listCalendars[e].weeks[f].days[i].isHovered = true\n                    }\n                  }\n\n                  if (this.checkSelDates('max', range.start, item.date, date)) {\n                    this.listCalendars[e].weeks[f].days[i].isMarked = false\n                    this.listCalendars[e].weeks[f].days[i].isHovered = false\n                    this.listCalendars[e].weeks[f].days[i].isMouseToLeft = false\n                    this.listCalendars[e].weeks[f].days[\n                      i\n                    ].isMouseToRight = false\n\n                    let maxDateToLeft, maxDateToRight\n                    maxDateToLeft = new Date(startDate.getTime())\n                    maxDateToRight = new Date(startDate.getTime())\n                    maxDateToLeft.setDate(\n                      maxDateToLeft.getDate() - this.fConfigs.maxSelDays + 1\n                    )\n                    maxDateToRight.setDate(\n                      maxDateToRight.getDate() + this.fConfigs.maxSelDays - 1\n                    )\n\n                    if (thisDate <= maxDateToLeft.getTime()) {\n                      if (\n                        this.helpCalendar.formatDate(maxDateToLeft) ===\n                        item.date\n                      ) {\n                        this.listCalendars[e].weeks[f].days[i].isHovered = true\n                        this.listCalendars[e].weeks[f].days[\n                          i\n                        ].isMouseToLeft = true\n                      }\n                    }\n\n                    if (thisDate >= maxDateToRight.getTime()) {\n                      if (\n                        this.helpCalendar.formatDate(maxDateToRight) ===\n                        item.date\n                      ) {\n                        this.listCalendars[e].weeks[f].days[i].isHovered = true\n                        this.listCalendars[e].weeks[f].days[\n                          i\n                        ].isMouseToRight = true\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        // })\n      }\n    },\n    /**\n     * @return {boolean}\n     */\n    PreMonth(calendarKey = null) {\n      if (!this.allowPreDate) return false\n\n      this.transitionPrefix = 'right'\n\n      let step = this.fConfigs.changeMonthStep\n\n      calendarKey = calendarKey !== null ? calendarKey : 0\n\n      let currentCalendar = this.listCalendars[calendarKey]\n      currentCalendar.date = new Date(\n        currentCalendar.date.getFullYear(),\n        currentCalendar.date.getMonth() - step\n      )\n      currentCalendar.key -= hUniqueID()\n      this.updateCalendar()\n\n      if (!this.fConfigs.isSeparately) {\n        this.calendar.currentDate = currentCalendar.date\n        this.initCalendar()\n      }\n\n      this.$emit('changedMonth', currentCalendar.date)\n    },\n    /**\n     * @return {boolean}\n     */\n    NextMonth(calendarKey = null) {\n      if (!this.allowNextDate) return false\n\n      this.transitionPrefix = 'left'\n\n      let step = this.fConfigs.changeMonthStep\n\n      calendarKey = calendarKey !== null ? calendarKey : 0\n\n      let currentCalendar = this.listCalendars[calendarKey]\n      currentCalendar.date = new Date(\n        currentCalendar.date.getFullYear(),\n        currentCalendar.date.getMonth() + step\n      )\n      currentCalendar.key += hUniqueID()\n      this.updateCalendar()\n\n      if (!this.fConfigs.isSeparately) {\n        this.calendar.currentDate = currentCalendar.date\n        this.initCalendar()\n      }\n\n      this.$emit('changedMonth', currentCalendar.date)\n    },\n    /**\n     * @return {boolean}\n     */\n    PreYear(calendarKey = null) {\n      if (!this.allowPreDate) return false\n\n      let step = this.showYearPicker ? this.fConfigs.changeYearStep : 1\n\n      calendarKey = calendarKey !== null ? calendarKey : 0\n\n      let currentCalendar = this.listCalendars[calendarKey]\n      currentCalendar.date = new Date(\n        currentCalendar.date.getFullYear() - step,\n        currentCalendar.date.getMonth()\n      )\n      this.updateCalendar()\n\n      if (!this.fConfigs.isSeparately) {\n        this.calendar.currentDate = currentCalendar.date\n        this.initCalendar()\n      }\n\n      this.$emit('changedYear', currentCalendar.date)\n    },\n    /**\n     * @return {boolean}\n     */\n    NextYear(calendarKey = null) {\n      if (!this.allowNextDate) return false\n\n      let step = this.showYearPicker ? this.fConfigs.changeYearStep : 1\n\n      calendarKey = calendarKey !== null ? calendarKey : 0\n\n      let currentCalendar = this.listCalendars[calendarKey]\n      currentCalendar.date = new Date(\n        currentCalendar.date.getFullYear() + step,\n        currentCalendar.date.getMonth()\n      )\n      this.updateCalendar()\n\n      if (!this.fConfigs.isSeparately) {\n        this.calendar.currentDate = currentCalendar.date\n        this.initCalendar()\n      }\n\n      this.$emit('changedYear', currentCalendar.date)\n    },\n    ChooseDate(date) {\n      let newDate = this.helpCalendar.getDateFromFormat(date)\n\n      if (date === 'today') {\n        newDate = new Date()\n      }\n\n      this.listCalendars[0].date = this.calendar.currentDate = newDate\n\n      this.updateCalendar()\n      this.initCalendar()\n    },\n    openMonthPicker(key) {\n      if (this.fConfigs.changeMonthFunction) {\n        this.showMonthPicker = key === this.showMonthPicker ? false : key\n        this.showYearPicker = false\n      }\n    },\n    openYearPicker(key) {\n      if (this.fConfigs.changeYearFunction) {\n        this.showYearPicker = key === this.showYearPicker ? false : key\n        this.showMonthPicker = false\n      }\n    },\n    openTimePicker() {\n      this.showTimePicker = true\n    },\n    pickMonth(key, calendarKey) {\n      this.showMonthPicker = false\n      if (!this.isSeparately) {\n        this.listCalendars.forEach((currentCalendar, index) => {\n          let date = currentCalendar.date\n          currentCalendar.date = new Date(\n            date.getFullYear(),\n            key + 1 + index,\n            0\n          )\n          currentCalendar.key += hUniqueID()\n        })\n      } else {\n        let currentCalendar = this.listCalendars[calendarKey]\n        let date = currentCalendar.date\n        currentCalendar.date = new Date(date.getFullYear(), key + 1, 0)\n        currentCalendar.key += hUniqueID()\n      }\n\n      let currentCalendar = this.listCalendars[calendarKey]\n      this.$emit('changedMonth', currentCalendar.date);\n      this.updateCalendar()\n    },\n    pickYear(year, calendarKey) {\n      this.showYearPicker = false\n      if (!this.isSeparately) {\n        this.listCalendars.forEach(currentCalendar => {\n          let date = currentCalendar.date\n          currentCalendar.date = new Date(year, date.getMonth() + 1, 0)\n          currentCalendar.key += hUniqueID()\n          this.$emit('changedYear', currentCalendar.date)\n        })\n      } else {\n        let currentCalendar = this.listCalendars[calendarKey]\n        let date = currentCalendar.date\n        currentCalendar.date = new Date(year, date.getMonth() + 1, 0)\n        currentCalendar.key += hUniqueID()\n        this.$emit('changedYear', currentCalendar.date)\n      }\n      this.updateCalendar()\n    },\n    getYearList(date, delta) {\n      let years = []\n      let year = date.getFullYear() - 4 + delta\n      for (let i = 0; i < 12; i++) {\n        let finalYear = year + i\n\n        years.push({\n          year: finalYear\n        })\n      }\n      return years\n    },\n    /**\n     * Add date to selectedDates list\n     * @param index\n     */\n    addToSelectedDates() {\n      if (this.helpCalendar.checkValidDate(this.calendar.selectedDatesItem)) {\n        let date = Object.assign({}, this.defaultDateFormat)\n        date.date = this.calendar.selectedDatesItem\n        this.calendar.selectedDates.push(date)\n        this.calendar.selectedDatesItem = ''\n        this.markChooseDays()\n      }\n    },\n    /**\n     * Remove date from selectedDates list\n     * @param index\n     */\n    removeFromSelectedDates(index) {\n      this.calendar.selectedDates.splice(index, 1)\n      this.markChooseDays()\n    },\n\n    checkDateRangeEnd(date) {\n      if (Array.isArray(this.fConfigs.markedDateRange)) {\n        return (\n          this.fConfigs.markedDateRange.findIndex(range => {\n            return range.end === date\n          }) !== -1\n        )\n      }\n\n      return date === this.fConfigs.markedDateRange.end\n    },\n    checkSelDates(type, startDate, itemDate, hoverDate) {\n      let startTime = this.helpCalendar.getDateFromFormat(startDate).getTime()\n      let itemTime = this.helpCalendar.getDateFromFormat(itemDate).getTime()\n      let hoverTime = this.helpCalendar.getDateFromFormat(hoverDate).getTime()\n\n      let days =\n        type === 'min' ? this.fConfigs.minSelDays : this.fConfigs.maxSelDays - 2\n      let minTime = days * 1000 * 60 * 60 * 24\n      let rightTime = startTime + minTime\n      let leftTime = startTime - minTime\n\n      let result\n      if (hoverTime > startTime) {\n        if (type === 'min')\n          result =\n            itemTime < rightTime &&\n            itemTime > startTime &&\n            this.fConfigs.minSelDays\n        else\n          result =\n            itemTime > rightTime &&\n            itemTime > startTime &&\n            this.fConfigs.maxSelDays\n      } else if (hoverTime < startTime) {\n        if (type === 'min')\n          result =\n            itemTime > leftTime &&\n            itemTime < startTime &&\n            this.fConfigs.minSelDays\n        else\n          result =\n            itemTime < leftTime &&\n            itemTime < startTime &&\n            this.fConfigs.maxSelDays\n      }\n\n      return result\n    },\n    checkLimits(value) {\n      if (this.fConfigs.limits) {\n        let min = new Date(\n          this.helpCalendar.getDateFromFormat(this.fConfigs.limits.min)\n        )\n        min.setDate(1)\n        min.setHours(0, 0, 0, 0)\n        let max = new Date(\n          this.helpCalendar.getDateFromFormat(this.fConfigs.limits.max)\n        )\n        max.setDate(1)\n        max.setHours(0, 0, 0, 0)\n\n        this.allowPreDate = true\n        this.allowNextDate = true\n\n        let current = new Date(value)\n        current.setDate(1)\n        current.setHours(0, 0, 0, 0)\n\n        if (current <= min) {\n          this.allowPreDate = false\n        }\n\n        if (current >= max) {\n          this.allowNextDate = false\n        }\n      }\n    },\n    getTransition_() {\n      if (!this.fConfigs.transition) return ''\n\n      let name = ''\n      if (this.transitionPrefix === 'left') {\n        name = 'vfc-calendar-slide-left'\n      } else if (this.transitionPrefix === 'right') {\n        name = 'vfc-calendar-slide-right'\n      }\n      return name\n    },\n    checkHiddenElement(elementName) {\n      return !this.fConfigs.hiddenElements.includes(elementName)\n    },\n    onFocusIn() {\n      if (this.fConfigs.isModal) {\n        this.showCalendar = true\n      }\n    },\n    onFocusOut(e) {\n      if (\n        this.fConfigs.isModal &&\n        !hElContains(this.popoverElement, e.relatedTarget)\n      ) {\n        return (this.showCalendar = this.showMonthPicker = this.showYearPicker = false)\n      }\n    },\n\n    hideMonthYearPicker(e) {\n      this.$nextTick(() => {\n        if (this.showMonthPicker || this.showYearPicker) {\n          let key = this.showMonthPicker\n            ? this.showMonthPicker - 1\n            : this.showYearPicker - 1\n\n          const MYactive = this.$refs.calendars.querySelectorAll(\n            `.vfc-content-MY-picker`\n          )[key]\n          if (MYactive.contains(e.target)) {\n            return\n          }\n          return (this.showMonthPicker = this.showYearPicker = false)\n        }\n      })\n    },\n\n    checkDateRangeStart(date) {\n      if (Array.isArray(this.fConfigs.markedDateRange)) {\n        return (\n          this.fConfigs.markedDateRange.findIndex(range => {\n            return range.start === date\n          }) !== -1\n        )\n      }\n\n      return date === this.fConfigs.markedDateRange.start\n    },\n    cleanRange() {\n      if (!this.isMultipleDateRange) {\n        this.calendar.dateRange.end = ''\n        this.calendar.dateRange.start = ''\n        return\n      }\n      this.calendar.multipleDateRange = []\n      // this.calendar.multipleDateRange.push({\n      //   start: '',\n      //   end: ''\n      // })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../assets/scss/calendar.scss';\n.rangeCleaner {\n  padding: 5px 0 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  span {\n    color: white;\n    border-radius: 5px;\n    border: none;\n    padding: 5px;\n    &.active {\n      &:hover {\n        background-color: #4f8a9e;\n        cursor: pointer;\n      }\n      background-color: #66b3cc;\n    }\n    &.disabled {\n      background-color: rgb(148, 148, 148);\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}