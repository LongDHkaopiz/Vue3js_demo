{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex justify-content-center form_container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<form><div class=\\\"input-group mb-3\\\"><div class=\\\"input-group-append\\\"><span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span></div><input type=\\\"password\\\" class=\\\"form-control input_pass\\\" placeholder=\\\"new password\\\"></div><div class=\\\"form-item row py-3\\\"><div class=\\\"col-sm-9\\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:56px;\\\">Submit</button></div></div></form>\", 1);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"names":["class","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/src/views/admin/authors/UpdatePassword.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex justify-content-center form_container\">\n        <form>\n            <div class=\"input-group mb-3\">\n                <div class=\"input-group-append\">\n                    <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                </div>\n                <input type=\"password\"  class=\"form-control input_pass\" placeholder=\"new password\">\n            </div>\n            <div class=\"form-item row py-3\">\n                <div class=\"col-sm-9\">\n                    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left: 56px;\">Submit</button>\n                </div>\n            </div>\n           \n        </form>\n    </div>\n</template>\n<script>\nimport { API_USER, API_FORGOT_PASS } from '../common/contants'\nexport default {\n    name: \"UserForm\",\n    data() {\n        return {\n            user: {\n                email: \"\",\n                password: \"\",\n            },\n            errors: {\n                email: \"\",\n                password: \"\",\n            }\n        }\n    },\n    created() {\n        // let userId = this.$route.params.id\n        // if (userId) {\n        //     this.getUser(userId)\n\n    },\n    methods: {\n        validate() {\n            let isValid = true\n            this.errors = {\n                name: \"\",\n                price: \"\",\n                description: \"\",\n                image: \"\"\n            }\n            if (!this.user.name) {\n                this.errors.name = 'User name is required'\n                isValid = false\n            } else if (!this.user.email) {\n                this.errors.email = 'User email is required'\n                isValid = false\n            } else if (!this.user.password) {\n                this.errors.password = 'User password is required'\n                isValid = false\n            }\n            return isValid\n        },\n        save() {\n            getUser()\n        },\n        handeEmail() {\n            this.$request.post(API_FORGOT_PASS, this.user).then((result) => {\n                this.user = result.data\n                if (this.user) {\n                    this.$router.push({\n                        name: 'admin.update-password',\n                    })\n                }\n                console.log(result.data)\n            }).catch((err) => {\n                alert(err)\n            });\n        },\n\n    }\n}\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAA8C;;oBACrDC,UAaO,C;;uBAdXC,mBAAA,CAeM,OAfNC,UAeM,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}