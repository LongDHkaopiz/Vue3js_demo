{"ast":null,"code":"import dashboard from './Sidebar.vue';\nimport API_WEATHER from '../common/contants';\nexport default {\n  name: 'dashboard.weather',\n  data() {\n    return {\n      items: []\n    };\n  },\n  components: {\n    dashboard\n  },\n  created() {\n    const getWeather = async () => {\n      try {\n        const response = await fetch(API_WEATHER);\n        // Storing data in form of JSON\n        var data = await response.json();\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getWeather();\n  }\n};","map":{"version":3,"names":["dashboard","API_WEATHER","name","data","items","components","created","getWeather","response","fetch","json","console","log","error"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/src/views/admin/authors/Weather.vue"],"sourcesContent":["<template>\n    <div class=\" d-flex\">\n        <dashboard></dashboard>\n        <div class=\"weather-today\">\n            <el-form :inline=\"true\"  class=\"demo-form-inline\">\n                <el-form-item label=\"Approved by\">\n                    <el-input placeholder=\"Approved by\" />\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"getWeather()\">Query</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n    </div>\n</template>\n<script>\nimport dashboard from './Sidebar.vue'\nimport API_WEATHER from '../common/contants'\nexport default {\n    name: 'dashboard.weather',\n    data() {\n        return {\n            items: []\n        }\n    },\n    components: {\n        dashboard\n    },\n    created() {\n        const getWeather = async () => {\n            try {\n                const response = await fetch(\n                    API_WEATHER\n                );\n                // Storing data in form of JSON\n                var data = await response.json();\n                console.log(data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getWeather()\n\n    }\n}\n</script>"],"mappings":"AAgBA,OAAOA,SAAQ,MAAO,eAAc;AACpC,OAAOC,WAAU,MAAO,oBAAmB;AAC3C,eAAe;EACXC,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,UAAU,EAAE;IACRL;EACJ,CAAC;EACDM,OAAOA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CACxBR,WACJ,CAAC;QACD;QACA,IAAIE,IAAG,GAAI,MAAMK,QAAQ,CAACE,IAAI,CAAC,CAAC;QAChCC,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;MACrB,EAAE,OAAOU,KAAK,EAAE;QACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACtB;IACJ;IACAN,UAAU,CAAC;EAEf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}