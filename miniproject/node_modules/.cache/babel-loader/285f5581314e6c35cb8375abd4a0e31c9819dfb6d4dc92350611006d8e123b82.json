{"ast":null,"code":"import { API_NEWS, API_NEWS_KEY } from '../common/contants';\nimport dashboard from './Sidebar.vue';\nexport default {\n  name: 'admin.news',\n  components: {\n    dashboard\n  },\n  data() {\n    return {\n      news: [],\n      search: '',\n      date_from: '',\n      date_to: '',\n      new_date_from: '',\n      new_date_to: ''\n    };\n  },\n  methods: {\n    async getAllNews() {\n      // const axios = require('axios');\n      // this.new_date_from = this.convertDateTime(this.date_from)\n      // this.new_date_to = this.convertDateTime(this.date_to)\n      // const proxyUrl = 'https://cors-anywhere.herokuapp.com/'\n      // const axiosProxy = axios.create({\n      //     baseURL: proxyUrl,\n      //     headers: {\n      //         'X-Requested-With': 'XMLHttpRequest'\n      //     }\n      // });\n      // const url = API_NEWS + `?q=${this.search}&from=${this.new_date_from}&to=${this.new_date_to}&sortBy=popularity&apiKey=` + API_NEWS_KEY;\n      // try {\n      //     const response = await axiosProxy.get(url);\n      //     const rest = response.data;\n      //     console.log(rest);\n      //     // this.news = rest\n      //     // console.log(this.news);\n      // } catch (error) {\n      //     console.error(error);\n      // }\n      // try {\n      //     assert(true);\n      //     const response = await fetch(url, { agent });\n      //     const rest = await response.json();\n      //     console.log(rest);\n      //     // this.news = rest\n      //     // console.log(this.news);\n      // } catch (error) {\n      //     console.error(error);\n      const express = require('express');\n      const axios = require('axios');\n      const app = express();\n      const port = 3000;\n\n      // Địa chỉ và khóa API News\n      const API_NEWS = 'https://newsapi.org/v2/';\n      const API_NEWS_KEY = 'f52be2bac47d4461b3f2a3ec993f97e1';\n\n      // Middleware cho CORS\n      app.use((req, res, next) => {\n        res.header('Access-Control-Allow-Origin', '*');\n        res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n        next();\n      });\n\n      // Route để lấy tin tức\n      app.get('/news', async (req, res) => {\n        const {\n          q,\n          from,\n          to\n        } = req.query;\n        const url = `${API_NEWS}everything?q=${q}&from=${from}&to=${to}&sortBy=popularity&apiKey=${API_NEWS_KEY}`;\n        try {\n          const response = await axios.get(url);\n          const news = response.data;\n          res.send(news);\n        } catch (error) {\n          console.error(error);\n          res.status(500).send('Internal Server Error');\n        }\n      });\n\n      // Khởi động máy chủ\n      app.listen(port, () => {\n        console.log(`Proxy server is running on port ${port}`);\n      });\n    },\n    convertDateTime(value) {\n      let dateObj = new Date(value);\n      let year = dateObj.getFullYear();\n      let month = (\"0\" + (dateObj.getMonth() + 1)).slice(-2);\n      let day = (\"0\" + dateObj.getDate()).slice(-2);\n      let formattedDate = `${year}-${month}-${day}`;\n      return formattedDate;\n    }\n  },\n  created() {}\n};","map":{"version":3,"names":["API_NEWS","API_NEWS_KEY","dashboard","name","components","data","news","search","date_from","date_to","new_date_from","new_date_to","methods","getAllNews","express","require","axios","app","port","use","req","res","next","header","get","q","from","to","query","url","response","send","error","console","status","listen","log","convertDateTime","value","dateObj","Date","year","getFullYear","month","getMonth","slice","day","getDate","formattedDate","created"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/src/views/admin/authors/News.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex\">\n        <dashboard></dashboard>\n        <div class=\"container\">\n            <el-form :model=\"form\" label-width=\"120px\">\n                <el-form-item label=\"Search By\">\n                    <el-input v-model=\"search\" />\n                </el-form-item>\n\n                <el-form-item label=\"Activity time\">\n                    <el-col :span=\"11\">\n                        <el-date-picker type=\"date\" placeholder=\"From date\" style=\"width: 100%\" v-model=\"date_from\" />\n                    </el-col>\n                    <el-col :span=\"2\" class=\"text-center\">\n                        <span class=\"text-gray-500\">-</span>\n                    </el-col>\n                    <el-col :span=\"11\">\n                        <el-date-picker placeholder=\"To date\" style=\"width: 100%\" v-model=\"date_to\" />\n                    </el-col>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"getAllNews\">Search</el-button>\n                </el-form-item>\n            </el-form>\n\n        </div>\n    </div>\n</template>\n<script >\nimport { API_NEWS, API_NEWS_KEY } from '../common/contants'\nimport dashboard from './Sidebar.vue'\nexport default {\n    name: 'admin.news',\n    components: {\n        dashboard,\n    },\n    data() {\n        return {\n            news: [],\n            search: '',\n            date_from: '',\n            date_to: '',\n            new_date_from: '',\n            new_date_to: ''\n        }\n    },\n    methods: {\n        async getAllNews() {\n            // const axios = require('axios');\n            // this.new_date_from = this.convertDateTime(this.date_from)\n            // this.new_date_to = this.convertDateTime(this.date_to)\n            // const proxyUrl = 'https://cors-anywhere.herokuapp.com/'\n            // const axiosProxy = axios.create({\n            //     baseURL: proxyUrl,\n            //     headers: {\n            //         'X-Requested-With': 'XMLHttpRequest'\n            //     }\n            // });\n            // const url = API_NEWS + `?q=${this.search}&from=${this.new_date_from}&to=${this.new_date_to}&sortBy=popularity&apiKey=` + API_NEWS_KEY;\n            // try {\n            //     const response = await axiosProxy.get(url);\n            //     const rest = response.data;\n            //     console.log(rest);\n            //     // this.news = rest\n            //     // console.log(this.news);\n            // } catch (error) {\n            //     console.error(error);\n            // }\n            // try {\n            //     assert(true);\n            //     const response = await fetch(url, { agent });\n            //     const rest = await response.json();\n            //     console.log(rest);\n            //     // this.news = rest\n            //     // console.log(this.news);\n            // } catch (error) {\n            //     console.error(error);\n            const express = require('express');\n            const axios = require('axios');\n\n            const app = express();\n            const port = 3000;\n\n            // Địa chỉ và khóa API News\n            const API_NEWS = 'https://newsapi.org/v2/';\n            const API_NEWS_KEY = 'f52be2bac47d4461b3f2a3ec993f97e1';\n\n            // Middleware cho CORS\n            app.use((req, res, next) => {\n                res.header('Access-Control-Allow-Origin', '*');\n                res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n                next();\n            });\n\n            // Route để lấy tin tức\n            app.get('/news', async (req, res) => {\n                const { q, from, to } = req.query;\n                const url = `${API_NEWS}everything?q=${q}&from=${from}&to=${to}&sortBy=popularity&apiKey=${API_NEWS_KEY}`;\n\n                try {\n                    const response = await axios.get(url);\n                    const news = response.data;\n                    res.send(news);\n                } catch (error) {\n                    console.error(error);\n                    res.status(500).send('Internal Server Error');\n                }\n            });\n\n            // Khởi động máy chủ\n            app.listen(port, () => {\n                console.log(`Proxy server is running on port ${port}`);\n            });\n        },\n        convertDateTime(value) {\n            let dateObj = new Date(value);\n            let year = dateObj.getFullYear();\n            let month = (\"0\" + (dateObj.getMonth() + 1)).slice(-2);\n            let day = (\"0\" + dateObj.getDate()).slice(-2);\n            let formattedDate = `${year}-${month}-${day}`;\n            return formattedDate;\n        }\n    },\n    created() {\n\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}