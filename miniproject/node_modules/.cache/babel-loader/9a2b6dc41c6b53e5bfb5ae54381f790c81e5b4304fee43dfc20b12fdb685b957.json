{"ast":null,"code":"import \"core-js/modules/es.regexp.flags.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex\"\n};\nconst _hoisted_2 = {\n  class: \"container list-anime\"\n};\nconst _hoisted_3 = [\"href\"];\nconst _hoisted_4 = [\"src\", \"alt\"];\nconst _hoisted_5 = {\n  class: \"anime-name\"\n};\nconst _hoisted_6 = {\n  class: \"anime-capital\"\n};\nconst _hoisted_7 = {\n  class: \"anime-population\"\n};\nconst _hoisted_8 = {\n  class: \"anime-region\"\n};\nconst _hoisted_9 = {\n  class: \"anime-timezones\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_dashboard = _resolveComponent(\"dashboard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_dashboard), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.animes, (country, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"anime-item d-flex\",\n      key: index\n    }, [_createElementVNode(\"a\", {\n      href: country.maps.googleMaps\n    }, [_createElementVNode(\"img\", {\n      src: country.flags.png,\n      alt: country.flags.alt,\n      style: {\n        \"width\": \"150px\",\n        \"height\": \"90px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_4)], 8 /* PROPS */, _hoisted_3), _createElementVNode(\"span\", _hoisted_5, _toDisplayString(country.name.common), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString(country.capital), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_7, _toDisplayString(country.population) + \" people\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_8, _toDisplayString(country.region), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, _toDisplayString(country.timezones[0]), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_dashboard","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","animes","country","index","key","href","maps","googleMaps","src","flags","png","alt","style","_hoisted_5","_toDisplayString","name","common","_hoisted_6","capital","_hoisted_7","population","_hoisted_8","region","_hoisted_9","timezones"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/src/views/admin/authors/Anime.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex\">\n        <dashboard></dashboard>\n        <div class=\"container list-anime \">\n            <div class=\"anime-item d-flex\" :key=\"index\" v-for=\"(country, index) in animes\">\n                <a :href=\"country.maps.googleMaps\">\n                    <img :src=\"country.flags.png\" :alt=\"country.flags.alt\" style=\"width: 150px; height: 90px;\">\n                </a>\n                <span class=\"anime-name\">{{ country.name.common }}</span>\n                <span class=\"anime-capital\">{{ country.capital }}</span>\n                <span class=\"anime-population\">{{ country.population }} people</span>\n                <span class=\"anime-region\">{{ country.region }}</span>\n                <span class=\"anime-timezones\"> {{ country.timezones[0] }}</span>\n            </div>\n\n        </div>\n    </div>\n</template>\n<script>\nimport dashboard from './Sidebar.vue'\nexport default {\n    name: 'dashboard.anime',\n    components: {\n        dashboard,\n    },\n    data() {\n        return {\n            animes: {}\n        }\n    },\n    methods: {\n        async getAllAnime() {\n            const url = 'https://animes5.p.rapidapi.com/';\n            const options = {\n                method: 'GET',\n                headers: {\n                    'X-RapidAPI-Key': 'dde66f0561msh324e6dc8a212669p1f94d2jsna8556e10d67a',\n                    'X-RapidAPI-Host': 'animes5.p.rapidapi.com'\n                }\n            };\n            try {\n                const response = await fetch(url, options);\n                this.animes = await response.json();\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    },\n    created() {\n        this.getAllAnime()\n    },\n}\n</script>"],"mappings":";;;EACSA,KAAK,EAAC;AAAQ;;EAEVA,KAAK,EAAC;AAAuB;;;;EAKpBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAe;;EACrBA,KAAK,EAAC;AAAkB;;EACxBA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAiB;;;uBAXzCC,mBAAA,CAeM,OAfNC,UAeM,GAdFC,YAAA,CAAuBC,oBAAA,GACvBC,mBAAA,CAYM,OAZNC,UAYM,I,kBAXFL,mBAAA,CASMM,SAAA,QAAAC,WAAA,CATiEC,KAAA,CAAAC,MAAM,GAAzBC,OAAO,EAAEC,KAAK;yBAAlEX,mBAAA,CASM;MATDD,KAAK,EAAC,mBAAmB;MAAEa,GAAG,EAAED;QACjCP,mBAAA,CAEI;MAFAS,IAAI,EAAEH,OAAO,CAACI,IAAI,CAACC;QACnBX,mBAAA,CAA2F;MAArFY,GAAG,EAAEN,OAAO,CAACO,KAAK,CAACC,GAAG;MAAGC,GAAG,EAAET,OAAO,CAACO,KAAK,CAACE,GAAG;MAAEC,KAAmC,EAAnC;QAAA;QAAA;MAAA;sEAE3DhB,mBAAA,CAAyD,QAAzDiB,UAAyD,EAAAC,gBAAA,CAA7BZ,OAAO,CAACa,IAAI,CAACC,MAAM,kBAC/CpB,mBAAA,CAAwD,QAAxDqB,UAAwD,EAAAH,gBAAA,CAAzBZ,OAAO,CAACgB,OAAO,kBAC9CtB,mBAAA,CAAqE,QAArEuB,UAAqE,EAAAL,gBAAA,CAAnCZ,OAAO,CAACkB,UAAU,IAAG,SAAO,iBAC9DxB,mBAAA,CAAsD,QAAtDyB,UAAsD,EAAAP,gBAAA,CAAxBZ,OAAO,CAACoB,MAAM,kBAC5C1B,mBAAA,CAAgE,QAAhE2B,UAAgE,EAAAT,gBAAA,CAA9BZ,OAAO,CAACsB,SAAS,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}