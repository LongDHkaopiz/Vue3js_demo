{"ast":null,"code":"import { createApp } from 'vue';\nimport { createStore } from 'vuex';\nimport App from './App.vue';\nimport router from './router';\nimport VueAxios from 'vue-axios';\nimport axios from 'axios';\nimport VueSweetalert2 from 'vue-sweetalert2';\nimport 'sweetalert2/dist/sweetalert2.min.css';\nimport ElementPlus from 'element-plus';\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue';\nimport 'element-plus/dist/index.css';\n/* import the fontawesome core */\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\n/* import font awesome icon component */\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\n/* import specific icons */\nimport { faBars, faUserSecret, faRightFromBracket } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faBars, faUserSecret, faRightFromBracket);\nconst store = createStore({\n  state: {\n    email: \"\",\n    switchOn: false\n  },\n  mutations: {\n    login(state, email) {\n      state.email = email;\n      localStorage.setItem('email', email);\n    },\n    logout(state) {\n      state.email = '';\n      localStorage.removeItem('email');\n    },\n    initialiseStore(state) {\n      if (localStorage.getItem('email')) {\n        state.email = localStorage.getItem('email');\n      }\n    },\n    setSwitchOn(state, newValue) {\n      state.switchOn = newValue;\n    }\n  },\n  getters: {\n    isLogin: state => state.email\n  }\n});\nexport default store;\nconst app = createApp(App).use(router);\napp.component('font-awesome-icon', FontAwesomeIcon);\napp.use(VueAxios, {\n  $request: axios\n});\napp.use(VueSweetalert2);\napp.use(ElementPlus);\napp.use(store);\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component);\n}\napp.mount('#app');","map":{"version":3,"names":["createApp","createStore","App","router","VueAxios","axios","VueSweetalert2","ElementPlus","ElementPlusIconsVue","library","FontAwesomeIcon","faBars","faUserSecret","faRightFromBracket","add","store","state","email","switchOn","mutations","login","localStorage","setItem","logout","removeItem","initialiseStore","getItem","setSwitchOn","newValue","getters","isLogin","app","use","component","$request","key","Object","entries","mount"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport { createStore } from 'vuex'\nimport App from './App.vue'\nimport router from './router'\nimport VueAxios from 'vue-axios'\nimport axios from 'axios'\nimport VueSweetalert2 from 'vue-sweetalert2'\nimport 'sweetalert2/dist/sweetalert2.min.css'\nimport ElementPlus from 'element-plus'\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\nimport 'element-plus/dist/index.css'\n/* import the fontawesome core */\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\n/* import font awesome icon component */\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\n/* import specific icons */\nimport { faBars ,faUserSecret,faRightFromBracket} from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faBars,faUserSecret,faRightFromBracket)\n\nconst store = createStore({\n  state : {\n    email: \"\",\n    switchOn: false,\n  },\n  mutations: {\n    login (state,email) {\n          state.email = email;\n          localStorage.setItem('email', email);\n    },\n    logout(state) {\n        state.email = '';\n        localStorage.removeItem('email');\n      },\n    initialiseStore(state) {\n      if(localStorage.getItem('email')){\n        state.email = localStorage.getItem('email');\n       }\n    },\n    setSwitchOn(state, newValue) {\n      state.switchOn = newValue;\n    },\n  },\n  getters: {\n    isLogin: state => state.email\n  }\n})\nexport default store;\nconst app = createApp(App).use(router)\napp.component('font-awesome-icon', FontAwesomeIcon)\napp.use(VueAxios, { $request: axios })\napp.use(VueSweetalert2)\napp.use(ElementPlus)\napp.use(store)\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component)\n}\napp.mount('#app')\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,iBAAiB;AAC5C,OAAO,sCAAsC;AAC7C,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,KAAKC,mBAAmB,MAAM,yBAAyB;AAC9D,OAAO,6BAA6B;AACpC;AACA,SAASC,OAAO,QAAQ,mCAAmC;;AAE3D;AACA,SAASC,eAAe,QAAQ,8BAA8B;;AAE9D;AACA,SAASC,MAAM,EAAEC,YAAY,EAACC,kBAAkB,QAAO,mCAAmC;AAC1FJ,OAAO,CAACK,GAAG,CAACH,MAAM,EAACC,YAAY,EAACC,kBAAkB,CAAC;AAEnD,MAAME,KAAK,GAAGd,WAAW,CAAC;EACxBe,KAAK,EAAG;IACNC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC;EACDC,SAAS,EAAE;IACTC,KAAKA,CAAEJ,KAAK,EAACC,KAAK,EAAE;MACdD,KAAK,CAACC,KAAK,GAAGA,KAAK;MACnBI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IAC1C,CAAC;IACDM,MAAMA,CAACP,KAAK,EAAE;MACVA,KAAK,CAACC,KAAK,GAAG,EAAE;MAChBI,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAClC,CAAC;IACHC,eAAeA,CAACT,KAAK,EAAE;MACrB,IAAGK,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC,EAAC;QAC/BV,KAAK,CAACC,KAAK,GAAGI,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;MAC5C;IACH,CAAC;IACDC,WAAWA,CAACX,KAAK,EAAEY,QAAQ,EAAE;MAC3BZ,KAAK,CAACE,QAAQ,GAAGU,QAAQ;IAC3B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,EAAEd,KAAK,IAAIA,KAAK,CAACC;EAC1B;AACF,CAAC,CAAC;AACF,eAAeF,KAAK;AACpB,MAAMgB,GAAG,GAAG/B,SAAS,CAACE,GAAG,CAAC,CAAC8B,GAAG,CAAC7B,MAAM,CAAC;AACtC4B,GAAG,CAACE,SAAS,CAAC,mBAAmB,EAAEvB,eAAe,CAAC;AACnDqB,GAAG,CAACC,GAAG,CAAC5B,QAAQ,EAAE;EAAE8B,QAAQ,EAAE7B;AAAM,CAAC,CAAC;AACtC0B,GAAG,CAACC,GAAG,CAAC1B,cAAc,CAAC;AACvByB,GAAG,CAACC,GAAG,CAACzB,WAAW,CAAC;AACpBwB,GAAG,CAACC,GAAG,CAACjB,KAAK,CAAC;AACd,KAAK,MAAM,CAACoB,GAAG,EAAEF,SAAS,CAAC,IAAIG,MAAM,CAACC,OAAO,CAAC7B,mBAAmB,CAAC,EAAE;EAClEuB,GAAG,CAACE,SAAS,CAACE,GAAG,EAAEF,SAAS,CAAC;AAC/B;AACAF,GAAG,CAACO,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}