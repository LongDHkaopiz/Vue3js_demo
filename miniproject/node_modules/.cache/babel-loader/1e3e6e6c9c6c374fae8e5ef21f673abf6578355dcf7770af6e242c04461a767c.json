{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar hours = [];\nvar url = 'http://api.weatherapi.com/v1/forecast.json?key=607d30125c34472888023252233105&q=Vietnam&days=1&aqi=yes&alerts=no';\n// Storing response\nconst response = await fetch(url);\n// Storing data in form of JSON\nvar data = await response.json();\nvar forecastday = data.forecast.forecastday;\nforecastday.forEach(element => {\n  hours.push(element.hour);\n});\nlet temp_c_values = hours[0].map(item => item.temp_c);\nlet temp_f_values = hours[0].map(item => item.temp_f);\nlet time_values = hours[0].map(item => item.time);\nconst hourArray = time_values.map(time => {\n  const date = new Date(time);\n  return date.getHours();\n});\nconst inputElement = Array.prototype.slice.call(document.getElementsByClassName('el-input__inner'))[0];\n// inputElement.forEach(e => {\n//     e.addEventListener(\"input\", () => {\n//         var inputValue = inputElement.value;\n//         console.log('dasdasda', inputValue); \n//     });\n// })\ninputElement.addEventListener(\"input\", () => {\n  var inputValue = inputElement.value;\n  console.log('dasdasda', inputValue);\n});\nconsole.log(inputValue);\nexport const weatherChart = {\n  type: \"line\",\n  chartData: {\n    labels: hourArray,\n    datasets: [{\n      label: \"Celsius temperature\",\n      data: temp_c_values,\n      backgroundColor: \"rgba(244, 231, 4, 0.8)\",\n      borderColor: \"#f4e704cc\",\n      borderWidth: 2\n    }, {\n      label: \"Fahrenheit temperature \",\n      data: temp_f_values,\n      backgroundColor: \"rgba(71, 183,132,.5)\",\n      borderColor: \"#47b784\",\n      borderWidth: 2\n    }]\n  },\n  options: {\n    responsive: true,\n    lineTension: 1,\n    maintainAspectRatio: true,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Hours'\n        },\n        ticks: {\n          beginAtZero: true,\n          padding: 0\n        },\n        Width: 600\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Temperature'\n        },\n        min: 0,\n        max: 150,\n        ticks: {\n          stepSize: 10,\n          padding: 0\n        }\n      }\n    }\n  }\n};\nexport default weatherChart;","map":{"version":3,"names":["hours","url","response","fetch","data","json","forecastday","forecast","forEach","element","push","hour","temp_c_values","map","item","temp_c","temp_f_values","temp_f","time_values","time","hourArray","date","Date","getHours","inputElement","Array","prototype","slice","call","document","getElementsByClassName","addEventListener","inputValue","value","console","log","weatherChart","type","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","lineTension","maintainAspectRatio","scales","x","title","display","text","ticks","beginAtZero","padding","Width","y","min","max","stepSize"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/src/views/admin/common/weather_chart.js"],"sourcesContent":["\nvar hours = [];\nvar url = 'http://api.weatherapi.com/v1/forecast.json?key=607d30125c34472888023252233105&q=Vietnam&days=1&aqi=yes&alerts=no';\n// Storing response\nconst response = await fetch(url);\n// Storing data in form of JSON\nvar data = await response.json();\nvar forecastday=data.forecast.forecastday\nforecastday.forEach(element => {\n    hours.push(element.hour)\n})\nlet temp_c_values = hours[0].map(item => item.temp_c); \nlet temp_f_values = hours[0].map(item => item.temp_f);\nlet time_values = hours[0].map(item => item.time);\nconst hourArray = time_values.map(time => {\n  const date = new Date(time);\n  return date.getHours();\n});\nconst inputElement = Array.prototype.slice.call( document.getElementsByClassName('el-input__inner'))[0]\n// inputElement.forEach(e => {\n//     e.addEventListener(\"input\", () => {\n//         var inputValue = inputElement.value;\n//         console.log('dasdasda', inputValue); \n//     });\n// })\ninputElement.addEventListener(\"input\", () => {\n  var inputValue = inputElement.value;\n  console.log('dasdasda',inputValue); \n});\nconsole.log(inputValue);\n\nexport const weatherChart = {\n    type: \"line\",\n    chartData: {\n        labels: hourArray,\n        datasets: [\n            {\n                label: \"Celsius temperature\",\n                data: temp_c_values,\n                backgroundColor: \"rgba(244, 231, 4, 0.8)\",\n                borderColor: \"#f4e704cc\",\n                borderWidth: 2,\n\n            },\n            {\n                label: \"Fahrenheit temperature \",\n                data: temp_f_values,\n                backgroundColor: \"rgba(71, 183,132,.5)\",\n                borderColor: \"#47b784\",\n                borderWidth: 2,\n\n            }\n        ]\n    },\n    options: {\n        responsive: true,\n        lineTension: 1,\n        maintainAspectRatio: true,\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: 'Hours'\n                },\n                ticks: {\n                    beginAtZero: true,\n                    padding: 0,\n                },\n                Width: 600\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: 'Temperature'\n                },\n                min: 0,\n                max: 150,\n                ticks: {\n                    stepSize: 10,\n                    padding: 0,\n                },\n\n            }\n        }\n    }\n};\n\n\nexport default weatherChart; "],"mappings":";AACA,IAAIA,KAAK,GAAG,EAAE;AACd,IAAIC,GAAG,GAAG,kHAAkH;AAC5H;AACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;AACjC;AACA,IAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;AAChC,IAAIC,WAAW,GAACF,IAAI,CAACG,QAAQ,CAACD,WAAW;AACzCA,WAAW,CAACE,OAAO,CAACC,OAAO,IAAI;EAC3BT,KAAK,CAACU,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC;AAC5B,CAAC,CAAC;AACF,IAAIC,aAAa,GAAGZ,KAAK,CAAC,CAAC,CAAC,CAACa,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC;AACrD,IAAIC,aAAa,GAAGhB,KAAK,CAAC,CAAC,CAAC,CAACa,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,MAAM,CAAC;AACrD,IAAIC,WAAW,GAAGlB,KAAK,CAAC,CAAC,CAAC,CAACa,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACK,IAAI,CAAC;AACjD,MAAMC,SAAS,GAAGF,WAAW,CAACL,GAAG,CAACM,IAAI,IAAI;EACxC,MAAME,IAAI,GAAG,IAAIC,IAAI,CAACH,IAAI,CAAC;EAC3B,OAAOE,IAAI,CAACE,QAAQ,CAAC,CAAC;AACxB,CAAC,CAAC;AACF,MAAMC,YAAY,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAAEC,QAAQ,CAACC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;AACvG;AACA;AACA;AACA;AACA;AACA;AACAN,YAAY,CAACO,gBAAgB,CAAC,OAAO,EAAE,MAAM;EAC3C,IAAIC,UAAU,GAAGR,YAAY,CAACS,KAAK;EACnCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACH,UAAU,CAAC;AACpC,CAAC,CAAC;AACFE,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;AAEvB,OAAO,MAAMI,YAAY,GAAG;EACxBC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAE;IACPC,MAAM,EAAEnB,SAAS;IACjBoB,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,qBAAqB;MAC5BrC,IAAI,EAAEQ,aAAa;MACnB8B,eAAe,EAAE,wBAAwB;MACzCC,WAAW,EAAE,WAAW;MACxBC,WAAW,EAAE;IAEjB,CAAC,EACD;MACIH,KAAK,EAAE,yBAAyB;MAChCrC,IAAI,EAAEY,aAAa;MACnB0B,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE;IAEjB,CAAC;EAET,CAAC;EACDC,OAAO,EAAE;IACLC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE,CAAC;IACdC,mBAAmB,EAAE,IAAI;IACzBC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACV,CAAC;QACDC,KAAK,EAAE;UACHC,WAAW,EAAE,IAAI;UACjBC,OAAO,EAAE;QACb,CAAC;QACDC,KAAK,EAAE;MACX,CAAC;MACDC,CAAC,EAAE;QACCP,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACV,CAAC;QACDM,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE,GAAG;QACRN,KAAK,EAAE;UACHO,QAAQ,EAAE,EAAE;UACZL,OAAO,EAAE;QACb;MAEJ;IACJ;EACJ;AACJ,CAAC;AAGD,eAAepB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}