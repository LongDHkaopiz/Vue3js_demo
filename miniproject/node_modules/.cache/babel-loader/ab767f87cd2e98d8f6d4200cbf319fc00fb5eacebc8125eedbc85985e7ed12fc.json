{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API_USER, API_FORGOT_PASS } from '../common/contants';\nexport default {\n  name: \"UserForm\",\n  data() {\n    return {\n      user: {\n        password: \"\"\n      },\n      errors: {\n        email: \"\",\n        password: \"\"\n      }\n    };\n  },\n  created() {\n    // let userId = this.$route.params.id\n    // if (userId) {\n    //     this.getUser(userId)\n  },\n  methods: {\n    validate() {\n      let isValid = true;\n      this.errors = {\n        name: \"\",\n        price: \"\",\n        description: \"\",\n        image: \"\"\n      };\n      if (!this.user.name) {\n        this.errors.name = 'User name is required';\n        isValid = false;\n      } else if (!this.user.email) {\n        this.errors.email = 'User email is required';\n        isValid = false;\n      } else if (!this.user.password) {\n        this.errors.password = 'User password is required';\n        isValid = false;\n      }\n      return isValid;\n    },\n    getUser(Userid) {\n      this.$request.get(API_USER + `/${Userid}`).then(result => {\n        this.user = result.data;\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    handePassword() {\n      this.$request.put(API_FORGOT_PASS + ``).then(result => {\n        this.user = result.data;\n        if (this.user) {\n          this.$router.push({\n            name: 'admin.update-password'\n          });\n        }\n        console.log(this.user);\n      }).catch(err => {\n        alert(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["API_USER","API_FORGOT_PASS","name","data","user","password","errors","email","created","methods","validate","isValid","price","description","image","getUser","Userid","$request","get","then","result","catch","err","alert","handePassword","put","$router","push","console","log"],"sources":["/home/longdh@kaopiz.local/Music/vueMiniProject/miniproject/src/views/admin/authors/UpdatePassword.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex justify-content-center form_container\">\n        <form>\n            <div class=\"input-group mb-3\">\n                <div class=\"input-group-append\">\n                    <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                </div>\n                <input type=\"password\"  class=\"form-control input_pass\" placeholder=\"new password\">\n            </div>\n            <div class=\"form-item row py-3\">\n                <div class=\"col-sm-9\">\n                    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left: 56px;\">Submit</button>\n                </div>\n            </div>\n           \n        </form>\n    </div>\n</template>\n<script>\nimport { API_USER, API_FORGOT_PASS } from '../common/contants'\nexport default {\n    name: \"UserForm\",\n    data() {\n        return {\n            user: {\n                password: \"\",\n            },\n            errors: {\n                email: \"\",\n                password: \"\",\n            }\n        }\n    },\n    created() {\n        // let userId = this.$route.params.id\n        // if (userId) {\n        //     this.getUser(userId)\n\n    },\n    methods: {\n        validate() {\n            let isValid = true\n            this.errors = {\n                name: \"\",\n                price: \"\",\n                description: \"\",\n                image: \"\"\n            }\n            if (!this.user.name) {\n                this.errors.name = 'User name is required'\n                isValid = false\n            } else if (!this.user.email) {\n                this.errors.email = 'User email is required'\n                isValid = false\n            } else if (!this.user.password) {\n                this.errors.password = 'User password is required'\n                isValid = false\n            }\n            return isValid\n        },\n        getUser(Userid) {\n            this.$request.get(API_USER + `/${Userid}`).then((result) => {\n                this.user = result.data\n            }).catch((err) => {\n                alert(err)\n            });\n        },\n        handePassword() {\n            this.$request.put(API_FORGOT_PASS + ``).then((result) => {\n                this.user = result.data\n                if (this.user) {\n                    this.$router.push({\n                        name: 'admin.update-password',\n                       \n                    })\n                }\n                console.log(this.user)\n            }).catch((err) => {\n                alert(err)\n            });\n        },\n\n    }\n}\n</script>"],"mappings":";AAmBA,SAASA,QAAQ,EAAEC,eAAc,QAAS,oBAAmB;AAC7D,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,QAAQ,EAAE;MACd,CAAC;MACDC,MAAM,EAAE;QACJC,KAAK,EAAE,EAAE;QACTF,QAAQ,EAAE;MACd;IACJ;EACJ,CAAC;EACDG,OAAOA,CAAA,EAAG;IACN;IACA;IACA;EAAA,CAEH;EACDC,OAAO,EAAE;IACLC,QAAQA,CAAA,EAAG;MACP,IAAIC,OAAM,GAAI,IAAG;MACjB,IAAI,CAACL,MAAK,GAAI;QACVJ,IAAI,EAAE,EAAE;QACRU,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE;MACX;MACA,IAAI,CAAC,IAAI,CAACV,IAAI,CAACF,IAAI,EAAE;QACjB,IAAI,CAACI,MAAM,CAACJ,IAAG,GAAI,uBAAsB;QACzCS,OAAM,GAAI,KAAI;MAClB,OAAO,IAAI,CAAC,IAAI,CAACP,IAAI,CAACG,KAAK,EAAE;QACzB,IAAI,CAACD,MAAM,CAACC,KAAI,GAAI,wBAAuB;QAC3CI,OAAM,GAAI,KAAI;MAClB,OAAO,IAAI,CAAC,IAAI,CAACP,IAAI,CAACC,QAAQ,EAAE;QAC5B,IAAI,CAACC,MAAM,CAACD,QAAO,GAAI,2BAA0B;QACjDM,OAAM,GAAI,KAAI;MAClB;MACA,OAAOA,OAAM;IACjB,CAAC;IACDI,OAAOA,CAACC,MAAM,EAAE;MACZ,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAClB,QAAO,GAAK,IAAGgB,MAAO,EAAC,CAAC,CAACG,IAAI,CAAEC,MAAM,IAAK;QACxD,IAAI,CAAChB,IAAG,GAAIgB,MAAM,CAACjB,IAAG;MAC1B,CAAC,CAAC,CAACkB,KAAK,CAAEC,GAAG,IAAK;QACdC,KAAK,CAACD,GAAG;MACb,CAAC,CAAC;IACN,CAAC;IACDE,aAAaA,CAAA,EAAG;MACZ,IAAI,CAACP,QAAQ,CAACQ,GAAG,CAACxB,eAAc,GAAK,EAAC,CAAC,CAACkB,IAAI,CAAEC,MAAM,IAAK;QACrD,IAAI,CAAChB,IAAG,GAAIgB,MAAM,CAACjB,IAAG;QACtB,IAAI,IAAI,CAACC,IAAI,EAAE;UACX,IAAI,CAACsB,OAAO,CAACC,IAAI,CAAC;YACdzB,IAAI,EAAE;UAEV,CAAC;QACL;QACA0B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,IAAI;MACzB,CAAC,CAAC,CAACiB,KAAK,CAAEC,GAAG,IAAK;QACdC,KAAK,CAACD,GAAG;MACb,CAAC,CAAC;IACN;EAEJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}